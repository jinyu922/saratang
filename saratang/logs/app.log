[2025-02-22 09:25:00] [WARN] [HikariPool] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=11h30m36s720ms667Âµs).
[2025-02-22 09:41:54] [INFO] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
[2025-02-22 09:41:54] [INFO] [Http11NioProtocol] - Pausing ProtocolHandler ["http-nio-8080"]
[2025-02-22 09:41:54] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-22 09:41:54] [INFO] [[/]] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[2025-02-22 09:41:54] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
[2025-02-22 09:41:54] [INFO] [Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-8080"]
[2025-02-22 09:41:54] [INFO] [Http11NioProtocol] - Destroying ProtocolHandler ["http-nio-8080"]
[2025-02-22 09:41:55] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown initiated...
[2025-02-22 09:41:55] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown completed.
[2025-02-22 11:23:20] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 11272 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-22 11:23:20] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-22 11:23:20] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-22 11:23:21] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-22 11:23:21] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-22 11:23:21] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-22 11:23:21] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-22 11:23:21] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-22 11:23:21] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 1014 ms
[2025-02-22 11:23:23] [INFO] [Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8080"]
[2025-02-22 11:23:23] [INFO] [TomcatWebServer] - Tomcat started on port(s): 8080 (http) with context path ''
[2025-02-22 11:23:23] [INFO] [SaratangApplication] - Started SaratangApplication in 3.216 seconds (JVM running for 4.309)
[2025-02-22 11:27:55] [INFO] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
[2025-02-22 11:27:56] [INFO] [Http11NioProtocol] - Pausing ProtocolHandler ["http-nio-8080"]
[2025-02-22 11:27:56] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-22 11:27:56] [INFO] [Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-8080"]
[2025-02-22 11:27:56] [INFO] [Http11NioProtocol] - Destroying ProtocolHandler ["http-nio-8080"]
[2025-02-22 12:32:40] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 2372 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-22 12:32:40] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-22 12:32:40] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-22 12:32:40] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-22 12:32:40] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-22 12:32:40] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-22 12:32:40] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-22 12:32:41] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-22 12:32:41] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 1040 ms
[2025-02-22 12:32:42] [INFO] [Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8080"]
[2025-02-22 12:32:42] [INFO] [TomcatWebServer] - Tomcat started on port(s): 8080 (http) with context path ''
[2025-02-22 12:32:42] [INFO] [SaratangApplication] - Started SaratangApplication in 2.911 seconds (JVM running for 4.035)
[2025-02-22 12:32:52] [INFO] [[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2025-02-22 12:32:52] [INFO] [DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
[2025-02-22 12:32:52] [INFO] [DispatcherServlet] - Completed initialization in 0 ms
[2025-02-22 12:32:53] [INFO] [AbstractOpenApiResource] - Init duration for springdoc-openapi is: 544 ms
[2025-02-22 12:33:41] [INFO] [HikariDataSource] - HikariPool-1 - Starting...
[2025-02-22 12:33:41] [INFO] [HikariDataSource] - HikariPool-1 - Start completed.
[2025-02-22 12:33:41] [DEBUG] [getFashionBest] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = 'fashion' AND uc.user_id = ? AND p.REGDATE >= DATE_SUB(CURDATE(), INTERVAL ? DAY) ORDER BY popularity DESC LIMIT ? OFFSET ?
[2025-02-22 12:33:41] [DEBUG] [getFashionBest] - ==> Parameters: 1(Integer), YESTERDAY(String), 5(Integer), 0(Long)
[2025-02-22 12:33:42] [DEBUG] [getFashionBest] - <==      Total: 0
[2025-02-22 12:33:42] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-22 12:33:42] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-22 12:33:42] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-22 12:34:17] [DEBUG] [getFashionBest] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = 'fashion' AND uc.user_id = ? AND p.REGDATE >= DATE_SUB(CURDATE(), INTERVAL ? DAY) ORDER BY popularity DESC LIMIT ? OFFSET ?
[2025-02-22 12:34:17] [DEBUG] [getFashionBest] - ==> Parameters: 1(Integer), YEAR(String), 5(Integer), 0(Long)
[2025-02-22 12:34:17] [DEBUG] [getFashionBest] - <==      Total: 0
[2025-02-22 12:34:17] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-22 12:34:17] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-22 12:34:17] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-22 12:35:34] [INFO] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
[2025-02-22 12:35:35] [INFO] [Http11NioProtocol] - Pausing ProtocolHandler ["http-nio-8080"]
[2025-02-22 12:35:35] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-22 12:35:35] [INFO] [[/]] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[2025-02-22 12:35:35] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-25] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-22 12:35:35] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-22 12:35:35] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
[2025-02-22 12:35:35] [INFO] [Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-8080"]
[2025-02-22 12:35:35] [INFO] [Http11NioProtocol] - Destroying ProtocolHandler ["http-nio-8080"]
[2025-02-22 12:35:35] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown initiated...
[2025-02-22 12:35:35] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown completed.
[2025-02-22 12:35:40] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 20252 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-22 12:35:40] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-22 12:35:40] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-22 12:35:41] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-22 12:35:41] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-22 12:35:41] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-22 12:35:41] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-22 12:35:41] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-22 12:35:41] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 924 ms
[2025-02-22 12:35:42] [INFO] [Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8080"]
[2025-02-22 12:35:42] [INFO] [TomcatWebServer] - Tomcat started on port(s): 8080 (http) with context path ''
[2025-02-22 12:35:42] [INFO] [SaratangApplication] - Started SaratangApplication in 2.785 seconds (JVM running for 3.8)
[2025-02-22 12:35:54] [INFO] [[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2025-02-22 12:35:54] [INFO] [DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
[2025-02-22 12:35:54] [INFO] [DispatcherServlet] - Completed initialization in 1 ms
[2025-02-22 12:35:54] [INFO] [HikariDataSource] - HikariPool-1 - Starting...
[2025-02-22 12:35:54] [INFO] [HikariDataSource] - HikariPool-1 - Start completed.
[2025-02-22 12:35:54] [DEBUG] [getFashionBest] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = 'fashion' AND uc.user_id = ? AND p.REGDATE >= DATE_SUB(CURDATE(), INTERVAL ? DAY) ORDER BY popularity DESC LIMIT ? OFFSET ?
[2025-02-22 12:35:54] [DEBUG] [getFashionBest] - ==> Parameters: 1(Integer), YEAR(String), 5(Integer), 0(Long)
[2025-02-22 12:35:54] [DEBUG] [getFashionBest] - <==      Total: 0
[2025-02-22 12:35:54] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-22 12:35:54] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-22 12:35:54] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-22 12:36:09] [DEBUG] [getFashionBest] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = 'fashion' AND uc.user_id = ? AND p.REGDATE >= DATE_SUB(CURDATE(), INTERVAL ? DAY) ORDER BY popularity DESC LIMIT ? OFFSET ?
[2025-02-22 12:36:09] [DEBUG] [getFashionBest] - ==> Parameters: 2(Integer), YEAR(String), 5(Integer), 0(Long)
[2025-02-22 12:36:09] [DEBUG] [getFashionBest] - <==      Total: 0
[2025-02-22 12:36:09] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-22 12:36:09] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-22 12:36:09] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-22 12:36:14] [DEBUG] [getFashionBest] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = 'fashion' AND uc.user_id = ? AND p.REGDATE >= DATE_SUB(CURDATE(), INTERVAL ? DAY) ORDER BY popularity DESC LIMIT ? OFFSET ?
[2025-02-22 12:36:14] [DEBUG] [getFashionBest] - ==> Parameters: 1(Integer), YEAR(String), 5(Integer), 0(Long)
[2025-02-22 12:36:14] [DEBUG] [getFashionBest] - <==      Total: 0
[2025-02-22 12:36:14] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-22 12:36:14] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-22 12:36:14] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-22 12:36:16] [DEBUG] [getDiscountBest] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements WHERE judgement = 'positive' GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = 'fashion' AND uc.user_id = ? AND p.REGDATE >= DATE_SUB(CURDATE(), INTERVAL ? DAY) ORDER BY popularity DESC LIMIT ? OFFSET ?
[2025-02-22 12:36:16] [DEBUG] [getDiscountBest] - ==> Parameters: 1(Integer), YEAR(String), 5(Integer), 0(Long)
[2025-02-22 12:36:16] [DEBUG] [getDiscountBest] - <==      Total: 0
[2025-02-22 12:36:16] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-22 12:36:16] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-22 12:36:16] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-22 12:37:15] [INFO] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
[2025-02-22 12:37:15] [INFO] [Http11NioProtocol] - Pausing ProtocolHandler ["http-nio-8080"]
[2025-02-22 12:37:15] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-22 12:37:15] [INFO] [[/]] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[2025-02-22 12:37:15] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
[2025-02-22 12:37:15] [INFO] [Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-8080"]
[2025-02-22 12:37:15] [INFO] [Http11NioProtocol] - Destroying ProtocolHandler ["http-nio-8080"]
[2025-02-22 12:37:15] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown initiated...
[2025-02-22 12:37:15] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown completed.
[2025-02-22 13:11:56] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 23584 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-22 13:11:56] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-22 13:11:56] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-22 13:11:57] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-22 13:11:57] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-22 13:11:57] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-22 13:11:57] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-22 13:11:57] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-22 13:11:57] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 889 ms
[2025-02-22 13:11:58] [INFO] [Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8080"]
[2025-02-22 13:11:58] [INFO] [TomcatWebServer] - Tomcat started on port(s): 8080 (http) with context path ''
[2025-02-22 13:11:58] [INFO] [SaratangApplication] - Started SaratangApplication in 2.755 seconds (JVM running for 3.768)
[2025-02-22 13:12:07] [INFO] [[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2025-02-22 13:12:07] [INFO] [DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
[2025-02-22 13:12:07] [INFO] [DispatcherServlet] - Completed initialization in 1 ms
[2025-02-22 13:12:07] [INFO] [AbstractOpenApiResource] - Init duration for springdoc-openapi is: 275 ms
[2025-02-22 13:12:15] [INFO] [HikariDataSource] - HikariPool-1 - Starting...
[2025-02-22 13:12:16] [INFO] [HikariDataSource] - HikariPool-1 - Start completed.
[2025-02-22 13:12:16] [DEBUG] [getFashionBest] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = 'fashion' AND uc.user_id = ? AND p.REGDATE >= DATE_SUB(CURDATE(), INTERVAL ? DAY) ORDER BY popularity DESC LIMIT ? OFFSET ?
[2025-02-22 13:12:16] [DEBUG] [getFashionBest] - ==> Parameters: 1(Integer), 7(Integer), 5(Integer), 0(Long)
[2025-02-22 13:12:16] [DEBUG] [getFashionBest] - <==      Total: 5
[2025-02-22 13:12:16] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:12:16] [DEBUG] [getImagesByPostId] - ==> Parameters: 1(Integer)
[2025-02-22 13:12:16] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:12:16] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:12:16] [DEBUG] [getImagesByPostId] - ==> Parameters: 3(Integer)
[2025-02-22 13:12:16] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:12:16] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:12:16] [DEBUG] [getImagesByPostId] - ==> Parameters: 5(Integer)
[2025-02-22 13:12:16] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:12:16] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:12:16] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-22 13:12:16] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:12:16] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:12:16] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-22 13:12:16] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:12:16] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-22 13:12:16] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-22 13:12:16] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-22 13:12:49] [DEBUG] [getFashionBest] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = 'fashion' AND uc.user_id = ? AND p.REGDATE >= DATE_SUB(CURDATE(), INTERVAL ? DAY) ORDER BY popularity DESC LIMIT ? OFFSET ?
[2025-02-22 13:12:49] [DEBUG] [getFashionBest] - ==> Parameters: 1(Integer), 1(Integer), 5(Integer), 0(Long)
[2025-02-22 13:12:49] [DEBUG] [getFashionBest] - <==      Total: 5
[2025-02-22 13:12:49] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:12:49] [DEBUG] [getImagesByPostId] - ==> Parameters: 1(Integer)
[2025-02-22 13:12:49] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:12:49] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:12:49] [DEBUG] [getImagesByPostId] - ==> Parameters: 3(Integer)
[2025-02-22 13:12:49] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:12:49] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:12:49] [DEBUG] [getImagesByPostId] - ==> Parameters: 5(Integer)
[2025-02-22 13:12:49] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:12:49] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:12:49] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-22 13:12:49] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:12:49] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:12:49] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-22 13:12:49] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:12:49] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-22 13:12:49] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-22 13:12:49] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-22 13:12:52] [DEBUG] [getDiscountBest] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements WHERE judgement = 'positive' GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = 'fashion' AND uc.user_id = ? AND p.REGDATE >= DATE_SUB(CURDATE(), INTERVAL ? DAY) ORDER BY popularity DESC LIMIT ? OFFSET ?
[2025-02-22 13:12:52] [DEBUG] [getDiscountBest] - ==> Parameters: 1(Integer), 1(Integer), 5(Integer), 0(Long)
[2025-02-22 13:12:52] [DEBUG] [getDiscountBest] - <==      Total: 5
[2025-02-22 13:12:52] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:12:52] [DEBUG] [getImagesByPostId] - ==> Parameters: 1(Integer)
[2025-02-22 13:12:52] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:12:52] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:12:52] [DEBUG] [getImagesByPostId] - ==> Parameters: 3(Integer)
[2025-02-22 13:12:52] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:12:52] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:12:52] [DEBUG] [getImagesByPostId] - ==> Parameters: 5(Integer)
[2025-02-22 13:12:52] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:12:52] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:12:52] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-22 13:12:52] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:12:52] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:12:52] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-22 13:12:52] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:12:52] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-22 13:12:52] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-22 13:12:52] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-22 13:12:56] [DEBUG] [getDiscountBest] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements WHERE judgement = 'positive' GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = 'fashion' AND uc.user_id = ? AND p.REGDATE >= DATE_SUB(CURDATE(), INTERVAL ? DAY) ORDER BY popularity DESC LIMIT ? OFFSET ?
[2025-02-22 13:12:56] [DEBUG] [getDiscountBest] - ==> Parameters: 1(Integer), 1(Integer), 5(Integer), 0(Long)
[2025-02-22 13:12:56] [DEBUG] [getDiscountBest] - <==      Total: 5
[2025-02-22 13:12:56] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:12:56] [DEBUG] [getImagesByPostId] - ==> Parameters: 1(Integer)
[2025-02-22 13:12:56] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:12:56] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:12:56] [DEBUG] [getImagesByPostId] - ==> Parameters: 3(Integer)
[2025-02-22 13:12:56] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:12:56] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:12:56] [DEBUG] [getImagesByPostId] - ==> Parameters: 5(Integer)
[2025-02-22 13:12:56] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:12:56] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:12:56] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-22 13:12:56] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:12:56] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:12:56] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-22 13:12:56] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:12:56] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-22 13:12:56] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-22 13:12:56] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-22 13:13:17] [INFO] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
[2025-02-22 13:13:17] [INFO] [Http11NioProtocol] - Pausing ProtocolHandler ["http-nio-8080"]
[2025-02-22 13:13:17] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-22 13:13:17] [INFO] [[/]] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[2025-02-22 13:13:17] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-25] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-22 13:13:17] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-18] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-22 13:13:17] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-22 13:13:17] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-29] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-22 13:13:17] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-22] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-22 13:13:17] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
[2025-02-22 13:13:17] [INFO] [Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-8080"]
[2025-02-22 13:13:17] [INFO] [Http11NioProtocol] - Destroying ProtocolHandler ["http-nio-8080"]
[2025-02-22 13:13:17] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown initiated...
[2025-02-22 13:13:17] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown completed.
[2025-02-22 13:13:20] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 24680 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-22 13:13:21] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-22 13:13:21] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-22 13:13:21] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-22 13:13:21] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-22 13:13:21] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-22 13:13:21] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-22 13:13:21] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-22 13:13:21] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 950 ms
[2025-02-22 13:13:23] [INFO] [Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8080"]
[2025-02-22 13:13:23] [INFO] [TomcatWebServer] - Tomcat started on port(s): 8080 (http) with context path ''
[2025-02-22 13:13:23] [INFO] [SaratangApplication] - Started SaratangApplication in 2.983 seconds (JVM running for 4.035)
[2025-02-22 13:27:24] [INFO] [[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2025-02-22 13:27:24] [INFO] [DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
[2025-02-22 13:27:24] [INFO] [DispatcherServlet] - Completed initialization in 3 ms
[2025-02-22 13:27:24] [INFO] [HikariDataSource] - HikariPool-1 - Starting...
[2025-02-22 13:27:24] [INFO] [HikariDataSource] - HikariPool-1 - Start completed.
[2025-02-22 13:27:24] [DEBUG] [getDiscountBest] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements WHERE judgement = 'positive' GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = 'discount' AND uc.user_id = ? AND p.REGDATE >= DATE_SUB(CURDATE(), INTERVAL ? DAY) ORDER BY popularity DESC LIMIT ? OFFSET ?
[2025-02-22 13:27:25] [DEBUG] [getDiscountBest] - ==> Parameters: 1(Integer), 1(Integer), 5(Integer), 0(Long)
[2025-02-22 13:27:25] [DEBUG] [getDiscountBest] - <==      Total: 5
[2025-02-22 13:27:25] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:27:25] [DEBUG] [getImagesByPostId] - ==> Parameters: 4(Integer)
[2025-02-22 13:27:25] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:27:25] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:27:25] [DEBUG] [getImagesByPostId] - ==> Parameters: 6(Integer)
[2025-02-22 13:27:25] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:27:25] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:27:25] [DEBUG] [getImagesByPostId] - ==> Parameters: 2(Integer)
[2025-02-22 13:27:25] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:27:25] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:27:25] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-22 13:27:25] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:27:25] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-22 13:27:25] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-22 13:27:25] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-22 13:27:25] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-22 13:27:25] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-22 13:27:25] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-22 13:27:54] [INFO] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
[2025-02-22 13:27:55] [INFO] [Http11NioProtocol] - Pausing ProtocolHandler ["http-nio-8080"]
[2025-02-22 13:27:55] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-22 13:27:55] [INFO] [[/]] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[2025-02-22 13:27:55] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
[2025-02-22 13:27:55] [INFO] [Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-8080"]
[2025-02-22 13:27:55] [INFO] [Http11NioProtocol] - Destroying ProtocolHandler ["http-nio-8080"]
[2025-02-22 13:27:55] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown initiated...
[2025-02-22 13:27:55] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown completed.
[2025-02-22 13:29:49] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 15536 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-22 13:29:49] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-22 13:29:49] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-22 13:29:50] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-22 13:29:50] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-22 13:29:50] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-22 13:29:50] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-22 13:29:50] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-22 13:29:50] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 1183 ms
[2025-02-22 13:29:52] [INFO] [Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8080"]
[2025-02-22 13:29:52] [INFO] [TomcatWebServer] - Tomcat started on port(s): 8080 (http) with context path ''
[2025-02-22 13:29:52] [INFO] [SaratangApplication] - Started SaratangApplication in 3.425 seconds (JVM running for 4.489)
[2025-02-22 13:30:01] [INFO] [[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2025-02-22 13:30:01] [INFO] [DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
[2025-02-22 13:30:01] [INFO] [DispatcherServlet] - Completed initialization in 1 ms
[2025-02-22 13:30:02] [INFO] [AbstractOpenApiResource] - Init duration for springdoc-openapi is: 281 ms
[2025-02-22 13:30:36] [INFO] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
[2025-02-22 13:30:37] [INFO] [Http11NioProtocol] - Pausing ProtocolHandler ["http-nio-8080"]
[2025-02-22 13:30:37] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-22 13:30:37] [INFO] [[/]] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[2025-02-22 13:30:37] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-18] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-22 13:30:37] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-11] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-22 13:30:37] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-22 13:30:37] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-29] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-22 13:30:37] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-22] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-22 13:30:37] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-15] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-22 13:30:37] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-8] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-22 13:30:37] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-22 13:30:37] [INFO] [Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-8080"]
[2025-02-22 13:30:37] [INFO] [Http11NioProtocol] - Destroying ProtocolHandler ["http-nio-8080"]
