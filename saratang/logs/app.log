[2025-02-21 09:46:27] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 13104 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-21 09:46:27] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-21 09:46:27] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-21 09:46:28] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-21 09:46:28] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-21 09:46:28] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-21 09:46:28] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-21 09:46:28] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-21 09:46:28] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 1104 ms
[2025-02-21 09:46:30] [INFO] [Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8080"]
[2025-02-21 09:46:30] [INFO] [TomcatWebServer] - Tomcat started on port(s): 8080 (http) with context path ''
[2025-02-21 09:46:30] [INFO] [SaratangApplication] - Started SaratangApplication in 3.039 seconds (JVM running for 4.195)
[2025-02-21 09:46:33] [INFO] [[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2025-02-21 09:46:33] [INFO] [DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
[2025-02-21 09:46:33] [INFO] [DispatcherServlet] - Completed initialization in 0 ms
[2025-02-21 09:46:34] [INFO] [AbstractOpenApiResource] - Init duration for springdoc-openapi is: 237 ms
[2025-02-21 09:46:44] [INFO] [HikariDataSource] - HikariPool-1 - Starting...
[2025-02-21 09:46:45] [INFO] [HikariDataSource] - HikariPool-1 - Start completed.
[2025-02-21 09:46:45] [DEBUG] [getCategoryList] - ==>  Preparing: SELECT category_id FROM user_categories WHERE user_id=?
[2025-02-21 09:46:45] [DEBUG] [getCategoryList] - ==> Parameters: 1(Integer)
[2025-02-21 09:46:45] [DEBUG] [getCategoryList] - <==      Total: 2
[2025-02-21 09:46:45] [DEBUG] [getFashionList] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ? OFFSET ?
[2025-02-21 09:46:45] [DEBUG] [getFashionList] - ==> Parameters: fashion(String), 1(Integer), 1(Integer), 5(Integer), 0(Long)
[2025-02-21 09:46:45] [DEBUG] [getFashionList] - <==      Total: 5
[2025-02-21 09:46:45] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 09:46:45] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 09:46:45] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 09:46:45] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 09:46:45] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 09:46:45] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 09:46:45] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 09:46:45] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 09:46:45] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 09:46:45] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 09:46:45] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 09:46:45] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 09:46:45] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 09:46:45] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 09:46:45] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 09:46:45] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-21 09:46:45] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-21 09:46:45] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-21 09:47:11] [DEBUG] [existJudgeByUserIdAndPostId] - ==>  Preparing: SELECT COUNT(*) FROM judgements WHERE user_id = ? AND post_id = ?
[2025-02-21 09:47:11] [DEBUG] [existJudgeByUserIdAndPostId] - ==> Parameters: 1(Integer), 22(Integer)
[2025-02-21 09:47:11] [DEBUG] [existJudgeByUserIdAndPostId] - <==      Total: 1
[2025-02-21 09:47:11] [DEBUG] [addJudgement] - ==>  Preparing: INSERT INTO judgements (user_id, post_id, judgement, regdate) VALUES (?, ?, ?, NOW());
[2025-02-21 09:47:11] [DEBUG] [addJudgement] - ==> Parameters: 1(Integer), 22(Integer), positive(String)
[2025-02-21 09:47:11] [DEBUG] [addJudgement] - <==    Updates: 1
[2025-02-21 09:47:19] [DEBUG] [getCategoryList] - ==>  Preparing: SELECT category_id FROM user_categories WHERE user_id=?
[2025-02-21 09:47:19] [DEBUG] [getCategoryList] - ==> Parameters: 1(Integer)
[2025-02-21 09:47:19] [DEBUG] [getCategoryList] - <==      Total: 2
[2025-02-21 09:47:19] [DEBUG] [getFashionList] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ? OFFSET ?
[2025-02-21 09:47:19] [DEBUG] [getFashionList] - ==> Parameters: fashion(String), 1(Integer), 1(Integer), 5(Integer), 0(Long)
[2025-02-21 09:47:19] [DEBUG] [getFashionList] - <==      Total: 5
[2025-02-21 09:47:19] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 09:47:19] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 09:47:19] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 09:47:19] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 09:47:19] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 09:47:19] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 09:47:19] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 09:47:19] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 09:47:19] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 09:47:19] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 09:47:19] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 09:47:19] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 09:47:19] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 09:47:19] [DEBUG] [getImagesByPostId] - ==> Parameters: 19(Integer)
[2025-02-21 09:47:19] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 09:47:19] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-21 09:47:19] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-21 09:47:19] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-21 09:50:32] [INFO] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
[2025-02-21 09:50:33] [INFO] [Http11NioProtocol] - Pausing ProtocolHandler ["http-nio-8080"]
[2025-02-21 09:50:33] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-21 09:50:33] [INFO] [[/]] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[2025-02-21 09:50:33] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
[2025-02-21 09:50:33] [INFO] [Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-8080"]
[2025-02-21 09:50:33] [INFO] [Http11NioProtocol] - Destroying ProtocolHandler ["http-nio-8080"]
[2025-02-21 09:50:33] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown initiated...
[2025-02-21 09:50:33] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown completed.
[2025-02-21 13:49:35] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 12380 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-21 13:49:35] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-21 13:49:35] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-21 13:49:35] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-21 13:49:36] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-21 13:49:36] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-21 13:49:36] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-21 13:49:36] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-21 13:49:36] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 1028 ms
[2025-02-21 13:49:37] [INFO] [Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8080"]
[2025-02-21 13:49:37] [INFO] [TomcatWebServer] - Tomcat started on port(s): 8080 (http) with context path ''
[2025-02-21 13:49:37] [INFO] [SaratangApplication] - Started SaratangApplication in 3.093 seconds (JVM running for 4.175)
[2025-02-21 13:49:42] [INFO] [[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2025-02-21 13:49:42] [INFO] [DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
[2025-02-21 13:49:42] [INFO] [DispatcherServlet] - Completed initialization in 1 ms
[2025-02-21 13:49:42] [INFO] [AbstractOpenApiResource] - Init duration for springdoc-openapi is: 315 ms
[2025-02-21 13:50:06] [INFO] [HikariDataSource] - HikariPool-1 - Starting...
[2025-02-21 13:50:06] [INFO] [HikariDataSource] - HikariPool-1 - Start completed.
[2025-02-21 13:50:06] [DEBUG] [getFashionList] - ==>  Preparing: SELECT * FROM ( -- 최신순 (최근 limitSize 개) SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, 'latest' AS type FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ? UNION -- 랜덤 (limitSize 개) SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, 'random' AS type FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ? UNION -- 인기순 (좋아요기준, 최근 30일 데이터에서 limitsize개) SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, 'popular' AS type FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) AND p.REGDATE >= NOW() - INTERVAL 30 DAY ORDER BY p.LIKES DESC LIMIT ? ) AS combined_posts ORDER BY RAND() LIMIT ?;
[2025-02-21 13:50:06] [DEBUG] [getFashionList] - ==> Parameters: fashion(String), 1(Integer), 1(Integer), 5(Integer), fashion(String), 1(Integer), 1(Integer), 5(Integer), fashion(String), 1(Integer), 1(Integer), 5(Integer), 4(Integer)
[2025-02-21 13:50:06] [ERROR] [[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UNION
	
	        -- 랜덤 (limitSize 개)
	        SELECT 
	            p.ID, 
' at line 31
### The error may exist in file [C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes\mapper\BoardMapper.xml]
### The error may involve com.swyp.saratang.mapper.BoardMapper.getFashionList-Inline
### The error occurred while setting parameters
### SQL: SELECT * FROM (          -- 최신순 (최근 limitSize 개)          SELECT               p.ID,               p.USER_ID,              p.CATEGORY_ID,              p.CONCERN_KEYWORD_ID,              p.POST_TYPE,              p.BRAND,              p.ORIGINAL_PRICE,              p.DISCOUNT_PRICE,              p.PRODUCT_LINK,              p.TITLE,              p.CURRENT_PRICE,              p.MEMO,              p.IS_SPEC_PUBLIC,              p.DETAIL_MEMO,              p.REGDATE,              'latest' AS type          FROM posts p          JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id          WHERE p.POST_TYPE = ?            AND uc.user_id = ?            AND p.ID NOT IN (                SELECT j.post_id FROM judgements j                 WHERE j.user_id = ?            )          ORDER BY p.REGDATE DESC          LIMIT ?            UNION            -- 랜덤 (limitSize 개)          SELECT               p.ID,               p.USER_ID,              p.CATEGORY_ID,              p.CONCERN_KEYWORD_ID,              p.POST_TYPE,              p.BRAND,              p.ORIGINAL_PRICE,              p.DISCOUNT_PRICE,              p.PRODUCT_LINK,              p.TITLE,              p.CURRENT_PRICE,              p.MEMO,              p.IS_SPEC_PUBLIC,              p.DETAIL_MEMO,              p.REGDATE,              'random' AS type          FROM posts p          JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id          WHERE p.POST_TYPE = ?            AND uc.user_id = ?            AND p.ID NOT IN (                SELECT j.post_id FROM judgements j                 WHERE j.user_id = ?            )          ORDER BY RAND()          LIMIT ?            UNION           -- 인기순 (좋아요기준, 최근 30일 데이터에서 limitsize개)          SELECT               p.ID,               p.USER_ID,              p.CATEGORY_ID,              p.CONCERN_KEYWORD_ID,              p.POST_TYPE,              p.BRAND,              p.ORIGINAL_PRICE,              p.DISCOUNT_PRICE,              p.PRODUCT_LINK,              p.TITLE,              p.CURRENT_PRICE,              p.MEMO,              p.IS_SPEC_PUBLIC,              p.DETAIL_MEMO,              p.REGDATE,              'popular' AS type          FROM posts p          JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id          WHERE p.POST_TYPE = ?            AND uc.user_id = ?            AND p.ID NOT IN (                SELECT j.post_id FROM judgements j                 WHERE j.user_id = ?            )            AND p.REGDATE >= NOW() - INTERVAL 30 DAY          ORDER BY p.LIKES DESC          LIMIT ?                ) AS combined_posts      ORDER BY RAND()      LIMIT ?;
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UNION
	
	        -- 랜덤 (limitSize 개)
	        SELECT 
	            p.ID, 
' at line 31
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UNION
	
	        -- 랜덤 (limitSize 개)
	        SELECT 
	            p.ID, 
' at line 31] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UNION
	
	        -- 랜덤 (limitSize 개)
	        SELECT 
	            p.ID, 
' at line 31
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58) ~[mybatis-3.5.13.jar:3.5.13]
	at com.sun.proxy.$Proxy127.execute(Unknown Source) ~[?:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:333) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142) ~[mybatis-3.5.13.jar:3.5.13]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-2.1.1.jar:2.1.1]
	at com.sun.proxy.$Proxy89.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-2.1.1.jar:2.1.1]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86) ~[mybatis-3.5.13.jar:3.5.13]
	at com.sun.proxy.$Proxy92.getFashionList(Unknown Source) ~[?:?]
	at com.swyp.saratang.service.BoardService.getFashionList(BoardService.java:46) ~[classes/:?]
	at com.swyp.saratang.controller.BoardController.getFashionList(BoardController.java:58) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:67) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:750) ~[?:1.8.0_431]
[2025-02-21 13:52:50] [INFO] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
[2025-02-21 13:52:50] [INFO] [Http11NioProtocol] - Pausing ProtocolHandler ["http-nio-8080"]
[2025-02-21 13:52:50] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-21 13:52:50] [INFO] [[/]] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[2025-02-21 13:52:50] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-11] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-21 13:52:50] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
[2025-02-21 13:52:50] [INFO] [Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-8080"]
[2025-02-21 13:52:50] [INFO] [Http11NioProtocol] - Destroying ProtocolHandler ["http-nio-8080"]
[2025-02-21 13:52:50] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown initiated...
[2025-02-21 13:52:50] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown completed.
[2025-02-21 13:52:54] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 4832 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-21 13:52:54] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-21 13:52:54] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-21 13:52:55] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-21 13:52:55] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-21 13:52:55] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-21 13:52:55] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-21 13:52:55] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-21 13:52:55] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 1004 ms
[2025-02-21 13:52:56] [INFO] [Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8080"]
[2025-02-21 13:52:56] [INFO] [TomcatWebServer] - Tomcat started on port(s): 8080 (http) with context path ''
[2025-02-21 13:52:56] [INFO] [SaratangApplication] - Started SaratangApplication in 2.921 seconds (JVM running for 3.956)
[2025-02-21 13:53:02] [INFO] [[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2025-02-21 13:53:02] [INFO] [DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
[2025-02-21 13:53:02] [INFO] [DispatcherServlet] - Completed initialization in 1 ms
[2025-02-21 13:53:02] [INFO] [HikariDataSource] - HikariPool-1 - Starting...
[2025-02-21 13:53:02] [INFO] [HikariDataSource] - HikariPool-1 - Start completed.
[2025-02-21 13:53:02] [DEBUG] [getFashionList] - ==>  Preparing: SELECT * FROM ( SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, 'latest' AS type FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ? UNION SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, 'random' AS type FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ? UNION SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, 'popular' AS type FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) AND p.REGDATE >= NOW() - INTERVAL 30 DAY ORDER BY p.LIKES DESC LIMIT ? ) AS combined_posts ORDER BY RAND() LIMIT ?;
[2025-02-21 13:53:02] [DEBUG] [getFashionList] - ==> Parameters: fashion(String), 1(Integer), 1(Integer), 5(Integer), fashion(String), 1(Integer), 1(Integer), 5(Integer), fashion(String), 1(Integer), 1(Integer), 5(Integer), 4(Integer)
[2025-02-21 13:53:02] [ERROR] [[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UNION
	        
	        SELECT 
	            p.ID, 
	            p.USER_ID,
	  ' at line 30
### The error may exist in file [C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes\mapper\BoardMapper.xml]
### The error may involve com.swyp.saratang.mapper.BoardMapper.getFashionList-Inline
### The error occurred while setting parameters
### SQL: SELECT * FROM (                    SELECT               p.ID,               p.USER_ID,              p.CATEGORY_ID,              p.CONCERN_KEYWORD_ID,              p.POST_TYPE,              p.BRAND,              p.ORIGINAL_PRICE,              p.DISCOUNT_PRICE,              p.PRODUCT_LINK,              p.TITLE,              p.CURRENT_PRICE,              p.MEMO,              p.IS_SPEC_PUBLIC,              p.DETAIL_MEMO,              p.REGDATE,              'latest' AS type          FROM posts p          JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id          WHERE p.POST_TYPE = ?            AND uc.user_id = ?            AND p.ID NOT IN (                SELECT j.post_id FROM judgements j                 WHERE j.user_id = ?            )          ORDER BY p.REGDATE DESC          LIMIT ?          UNION                    SELECT               p.ID,               p.USER_ID,              p.CATEGORY_ID,              p.CONCERN_KEYWORD_ID,              p.POST_TYPE,              p.BRAND,              p.ORIGINAL_PRICE,              p.DISCOUNT_PRICE,              p.PRODUCT_LINK,              p.TITLE,              p.CURRENT_PRICE,              p.MEMO,              p.IS_SPEC_PUBLIC,              p.DETAIL_MEMO,              p.REGDATE,              'random' AS type          FROM posts p          JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id          WHERE p.POST_TYPE = ?            AND uc.user_id = ?            AND p.ID NOT IN (                SELECT j.post_id FROM judgements j                 WHERE j.user_id = ?            )          ORDER BY RAND()          LIMIT ?          UNION                     SELECT               p.ID,               p.USER_ID,              p.CATEGORY_ID,              p.CONCERN_KEYWORD_ID,              p.POST_TYPE,              p.BRAND,              p.ORIGINAL_PRICE,              p.DISCOUNT_PRICE,              p.PRODUCT_LINK,              p.TITLE,              p.CURRENT_PRICE,              p.MEMO,              p.IS_SPEC_PUBLIC,              p.DETAIL_MEMO,              p.REGDATE,              'popular' AS type          FROM posts p          JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id          WHERE p.POST_TYPE = ?            AND uc.user_id = ?            AND p.ID NOT IN (                SELECT j.post_id FROM judgements j                 WHERE j.user_id = ?            )            AND p.REGDATE >= NOW() - INTERVAL 30 DAY          ORDER BY p.LIKES DESC          LIMIT ?                ) AS combined_posts      ORDER BY RAND()      LIMIT ?;
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UNION
	        
	        SELECT 
	            p.ID, 
	            p.USER_ID,
	  ' at line 30
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UNION
	        
	        SELECT 
	            p.ID, 
	            p.USER_ID,
	  ' at line 30] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UNION
	        
	        SELECT 
	            p.ID, 
	            p.USER_ID,
	  ' at line 30
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58) ~[mybatis-3.5.13.jar:3.5.13]
	at com.sun.proxy.$Proxy115.execute(Unknown Source) ~[?:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:333) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142) ~[mybatis-3.5.13.jar:3.5.13]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-2.1.1.jar:2.1.1]
	at com.sun.proxy.$Proxy89.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-2.1.1.jar:2.1.1]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86) ~[mybatis-3.5.13.jar:3.5.13]
	at com.sun.proxy.$Proxy92.getFashionList(Unknown Source) ~[?:?]
	at com.swyp.saratang.service.BoardService.getFashionList(BoardService.java:46) ~[classes/:?]
	at com.swyp.saratang.controller.BoardController.getFashionList(BoardController.java:58) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:67) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:750) ~[?:1.8.0_431]
[2025-02-21 13:58:31] [INFO] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
[2025-02-21 13:58:32] [INFO] [Http11NioProtocol] - Pausing ProtocolHandler ["http-nio-8080"]
[2025-02-21 13:58:32] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-21 13:58:32] [INFO] [[/]] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[2025-02-21 13:58:32] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
[2025-02-21 13:58:32] [INFO] [Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-8080"]
[2025-02-21 13:58:32] [INFO] [Http11NioProtocol] - Destroying ProtocolHandler ["http-nio-8080"]
[2025-02-21 13:58:32] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown initiated...
[2025-02-21 13:58:32] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown completed.
[2025-02-21 13:58:36] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 10744 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-21 13:58:36] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-21 13:58:36] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-21 13:58:37] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-21 13:58:37] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-21 13:58:37] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-21 13:58:37] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-21 13:58:37] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-21 13:58:37] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 945 ms
[2025-02-21 13:58:38] [INFO] [Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8080"]
[2025-02-21 13:58:38] [INFO] [TomcatWebServer] - Tomcat started on port(s): 8080 (http) with context path ''
[2025-02-21 13:58:38] [INFO] [SaratangApplication] - Started SaratangApplication in 2.872 seconds (JVM running for 3.901)
[2025-02-21 13:58:44] [INFO] [[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2025-02-21 13:58:44] [INFO] [DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
[2025-02-21 13:58:44] [INFO] [DispatcherServlet] - Completed initialization in 1 ms
[2025-02-21 13:58:44] [INFO] [HikariDataSource] - HikariPool-1 - Starting...
[2025-02-21 13:58:44] [INFO] [HikariDataSource] - HikariPool-1 - Start completed.
[2025-02-21 13:58:44] [DEBUG] [getFashionList] - ==>  Preparing: SELECT DISTINCT * FROM ( -- 최신순 (최근 limitSize 개) SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, 'latest' AS type FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ? UNION ALL -- 랜덤 (limitSize 개) SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, 'random' AS type FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ? UNION ALL -- 인기순 (좋아요 기준, 최근 30일 데이터에서 limitSize 개) SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, 'popular' AS type FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) AND p.REGDATE >= NOW() - INTERVAL 30 DAY ORDER BY p.LIKES DESC LIMIT ? ) AS combined_posts ORDER BY RAND() LIMIT ?;
[2025-02-21 13:58:44] [DEBUG] [getFashionList] - ==> Parameters: fashion(String), 1(Integer), 1(Integer), 5(Integer), fashion(String), 1(Integer), 1(Integer), 5(Integer), fashion(String), 1(Integer), 1(Integer), 5(Integer), 4(Integer)
[2025-02-21 13:58:44] [ERROR] [[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UNION ALL
		
		    -- 랜덤 (limitSize 개)
		    SELECT 
		        p.ID, 
		  ' at line 32
### The error may exist in file [C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes\mapper\BoardMapper.xml]
### The error may involve com.swyp.saratang.mapper.BoardMapper.getFashionList-Inline
### The error occurred while setting parameters
### SQL: SELECT DISTINCT *    FROM (       -- 최신순 (최근 limitSize 개)       SELECT            p.ID,            p.USER_ID,           p.CATEGORY_ID,           p.CONCERN_KEYWORD_ID,           p.POST_TYPE,           p.BRAND,           p.ORIGINAL_PRICE,           p.DISCOUNT_PRICE,           p.PRODUCT_LINK,           p.TITLE,           p.CURRENT_PRICE,           p.MEMO,           p.IS_SPEC_PUBLIC,           p.DETAIL_MEMO,           p.REGDATE,           'latest' AS type       FROM posts p       JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id       WHERE p.POST_TYPE = ?         AND uc.user_id = ?         AND p.ID NOT IN (             SELECT j.post_id FROM judgements j              WHERE j.user_id = ?         )       ORDER BY p.REGDATE DESC       LIMIT ?          UNION ALL          -- 랜덤 (limitSize 개)       SELECT            p.ID,            p.USER_ID,           p.CATEGORY_ID,           p.CONCERN_KEYWORD_ID,           p.POST_TYPE,           p.BRAND,           p.ORIGINAL_PRICE,           p.DISCOUNT_PRICE,           p.PRODUCT_LINK,           p.TITLE,           p.CURRENT_PRICE,           p.MEMO,           p.IS_SPEC_PUBLIC,           p.DETAIL_MEMO,           p.REGDATE,           'random' AS type       FROM posts p       JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id       WHERE p.POST_TYPE = ?         AND uc.user_id = ?         AND p.ID NOT IN (             SELECT j.post_id FROM judgements j              WHERE j.user_id = ?         )       ORDER BY RAND()       LIMIT ?          UNION ALL          -- 인기순 (좋아요 기준, 최근 30일 데이터에서 limitSize 개)       SELECT            p.ID,            p.USER_ID,           p.CATEGORY_ID,           p.CONCERN_KEYWORD_ID,           p.POST_TYPE,           p.BRAND,           p.ORIGINAL_PRICE,           p.DISCOUNT_PRICE,           p.PRODUCT_LINK,           p.TITLE,           p.CURRENT_PRICE,           p.MEMO,           p.IS_SPEC_PUBLIC,           p.DETAIL_MEMO,           p.REGDATE,           'popular' AS type       FROM posts p       JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id       WHERE p.POST_TYPE = ?         AND uc.user_id = ?         AND p.ID NOT IN (             SELECT j.post_id FROM judgements j              WHERE j.user_id = ?         )         AND p.REGDATE >= NOW() - INTERVAL 30 DAY       ORDER BY p.LIKES DESC       LIMIT ?      ) AS combined_posts   ORDER BY RAND()   LIMIT ?;
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UNION ALL
		
		    -- 랜덤 (limitSize 개)
		    SELECT 
		        p.ID, 
		  ' at line 32
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UNION ALL
		
		    -- 랜덤 (limitSize 개)
		    SELECT 
		        p.ID, 
		  ' at line 32] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UNION ALL
		
		    -- 랜덤 (limitSize 개)
		    SELECT 
		        p.ID, 
		  ' at line 32
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58) ~[mybatis-3.5.13.jar:3.5.13]
	at com.sun.proxy.$Proxy115.execute(Unknown Source) ~[?:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:333) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142) ~[mybatis-3.5.13.jar:3.5.13]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-2.1.1.jar:2.1.1]
	at com.sun.proxy.$Proxy89.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-2.1.1.jar:2.1.1]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86) ~[mybatis-3.5.13.jar:3.5.13]
	at com.sun.proxy.$Proxy92.getFashionList(Unknown Source) ~[?:?]
	at com.swyp.saratang.service.BoardService.getFashionList(BoardService.java:46) ~[classes/:?]
	at com.swyp.saratang.controller.BoardController.getFashionList(BoardController.java:58) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:67) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:750) ~[?:1.8.0_431]
[2025-02-21 13:59:21] [INFO] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
[2025-02-21 13:59:22] [INFO] [Http11NioProtocol] - Pausing ProtocolHandler ["http-nio-8080"]
[2025-02-21 13:59:22] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-21 13:59:22] [INFO] [[/]] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[2025-02-21 13:59:22] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
[2025-02-21 13:59:22] [INFO] [Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-8080"]
[2025-02-21 13:59:22] [INFO] [Http11NioProtocol] - Destroying ProtocolHandler ["http-nio-8080"]
[2025-02-21 13:59:22] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown initiated...
[2025-02-21 13:59:22] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown completed.
[2025-02-21 13:59:26] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 27196 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-21 13:59:26] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-21 13:59:26] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-21 13:59:27] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-21 13:59:27] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-21 13:59:27] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-21 13:59:27] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-21 13:59:27] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-21 13:59:27] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 911 ms
[2025-02-21 13:59:29] [INFO] [Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8080"]
[2025-02-21 13:59:29] [INFO] [TomcatWebServer] - Tomcat started on port(s): 8080 (http) with context path ''
[2025-02-21 13:59:29] [INFO] [SaratangApplication] - Started SaratangApplication in 2.881 seconds (JVM running for 3.966)
[2025-02-21 14:04:21] [INFO] [[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2025-02-21 14:04:21] [INFO] [DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
[2025-02-21 14:04:21] [INFO] [DispatcherServlet] - Completed initialization in 1 ms
[2025-02-21 14:04:21] [INFO] [HikariDataSource] - HikariPool-1 - Starting...
[2025-02-21 14:04:21] [INFO] [HikariDataSource] - HikariPool-1 - Start completed.
[2025-02-21 14:04:21] [DEBUG] [getFashionList] - ==>  Preparing: SELECT DISTINCT * FROM ( SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, 'latest' AS type FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ? UNION ALL SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, 'random' AS type FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ? UNION ALL SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, 'popular' AS type FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) AND p.REGDATE >= NOW() - INTERVAL 30 DAY ORDER BY p.LIKES DESC LIMIT ? ) AS combined_posts ORDER BY RAND() LIMIT ?;
[2025-02-21 14:04:21] [DEBUG] [getFashionList] - ==> Parameters: fashion(String), 1(Integer), 1(Integer), 5(Integer), fashion(String), 1(Integer), 1(Integer), 5(Integer), fashion(String), 1(Integer), 1(Integer), 5(Integer), 4(Integer)
[2025-02-21 14:04:21] [ERROR] [[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UNION ALL
		    SELECT 
		        p.ID, 
		        p.USER_ID,
		        p.CATEGO' at line 30
### The error may exist in file [C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes\mapper\BoardMapper.xml]
### The error may involve com.swyp.saratang.mapper.BoardMapper.getFashionList-Inline
### The error occurred while setting parameters
### SQL: SELECT DISTINCT *    FROM (       SELECT            p.ID,            p.USER_ID,           p.CATEGORY_ID,           p.CONCERN_KEYWORD_ID,           p.POST_TYPE,           p.BRAND,           p.ORIGINAL_PRICE,           p.DISCOUNT_PRICE,           p.PRODUCT_LINK,           p.TITLE,           p.CURRENT_PRICE,           p.MEMO,           p.IS_SPEC_PUBLIC,           p.DETAIL_MEMO,           p.REGDATE,           'latest' AS type       FROM posts p       JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id       WHERE p.POST_TYPE = ?         AND uc.user_id = ?         AND p.ID NOT IN (             SELECT j.post_id FROM judgements j              WHERE j.user_id = ?         )       ORDER BY p.REGDATE DESC       LIMIT ?       UNION ALL       SELECT            p.ID,            p.USER_ID,           p.CATEGORY_ID,           p.CONCERN_KEYWORD_ID,           p.POST_TYPE,           p.BRAND,           p.ORIGINAL_PRICE,           p.DISCOUNT_PRICE,           p.PRODUCT_LINK,           p.TITLE,           p.CURRENT_PRICE,           p.MEMO,           p.IS_SPEC_PUBLIC,           p.DETAIL_MEMO,           p.REGDATE,           'random' AS type       FROM posts p       JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id       WHERE p.POST_TYPE = ?         AND uc.user_id = ?         AND p.ID NOT IN (             SELECT j.post_id FROM judgements j              WHERE j.user_id = ?         )       ORDER BY RAND()       LIMIT ?       UNION ALL       SELECT            p.ID,            p.USER_ID,           p.CATEGORY_ID,           p.CONCERN_KEYWORD_ID,           p.POST_TYPE,           p.BRAND,           p.ORIGINAL_PRICE,           p.DISCOUNT_PRICE,           p.PRODUCT_LINK,           p.TITLE,           p.CURRENT_PRICE,           p.MEMO,           p.IS_SPEC_PUBLIC,           p.DETAIL_MEMO,           p.REGDATE,           'popular' AS type       FROM posts p       JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id       WHERE p.POST_TYPE = ?         AND uc.user_id = ?         AND p.ID NOT IN (             SELECT j.post_id FROM judgements j              WHERE j.user_id = ?         )         AND p.REGDATE >= NOW() - INTERVAL 30 DAY       ORDER BY p.LIKES DESC       LIMIT ?   ) AS combined_posts   ORDER BY RAND()   LIMIT ?;
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UNION ALL
		    SELECT 
		        p.ID, 
		        p.USER_ID,
		        p.CATEGO' at line 30
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UNION ALL
		    SELECT 
		        p.ID, 
		        p.USER_ID,
		        p.CATEGO' at line 30] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UNION ALL
		    SELECT 
		        p.ID, 
		        p.USER_ID,
		        p.CATEGO' at line 30
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58) ~[mybatis-3.5.13.jar:3.5.13]
	at com.sun.proxy.$Proxy115.execute(Unknown Source) ~[?:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:333) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142) ~[mybatis-3.5.13.jar:3.5.13]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-2.1.1.jar:2.1.1]
	at com.sun.proxy.$Proxy89.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-2.1.1.jar:2.1.1]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86) ~[mybatis-3.5.13.jar:3.5.13]
	at com.sun.proxy.$Proxy92.getFashionList(Unknown Source) ~[?:?]
	at com.swyp.saratang.service.BoardService.getFashionList(BoardService.java:46) ~[classes/:?]
	at com.swyp.saratang.controller.BoardController.getFashionList(BoardController.java:58) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:67) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:750) ~[?:1.8.0_431]
[2025-02-21 15:31:49] [INFO] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
[2025-02-21 15:31:49] [INFO] [Http11NioProtocol] - Pausing ProtocolHandler ["http-nio-8080"]
[2025-02-21 15:31:49] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-21 15:31:49] [INFO] [[/]] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[2025-02-21 15:31:49] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
[2025-02-21 15:31:49] [INFO] [Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-8080"]
[2025-02-21 15:31:49] [INFO] [Http11NioProtocol] - Destroying ProtocolHandler ["http-nio-8080"]
[2025-02-21 15:31:49] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown initiated...
[2025-02-21 15:31:49] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown completed.
[2025-02-21 15:31:55] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 2216 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-21 15:31:55] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-21 15:31:55] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-21 15:31:56] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-21 15:31:56] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-21 15:31:56] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-21 15:31:56] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-21 15:31:56] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-21 15:31:56] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 963 ms
[2025-02-21 15:31:57] [WARN] [AnnotationConfigServletWebServerApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'boardController' method 
com.swyp.saratang.controller.BoardController#getFashionListAlgorithm(String, int, int, int, HttpSession)
to {GET [/fashion]}: There is already 'boardController' bean method
com.swyp.saratang.controller.BoardController#getFashionList(int, int, String, int, HttpSession) mapped.
[2025-02-21 15:31:57] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-21 15:31:57] [INFO] [ConditionEvaluationReportLoggingListener] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[2025-02-21 15:31:57] [ERROR] [SpringApplication] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'boardController' method 
com.swyp.saratang.controller.BoardController#getFashionListAlgorithm(String, int, int, int, HttpSession)
to {GET [/fashion]}: There is already 'boardController' bean method
com.swyp.saratang.controller.BoardController#getFashionList(int, int, String, int, HttpSession) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-5.3.26.jar:5.3.26]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.26.jar:5.3.26]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.26.jar:5.3.26]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.26.jar:5.3.26]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.26.jar:5.3.26]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.26.jar:5.3.26]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.26.jar:5.3.26]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955) ~[spring-beans-5.3.26.jar:5.3.26]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920) ~[spring-context-5.3.26.jar:5.3.26]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.26.jar:5.3.26]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.10.jar:2.7.10]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731) ~[spring-boot-2.7.10.jar:2.7.10]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.10.jar:2.7.10]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307) ~[spring-boot-2.7.10.jar:2.7.10]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303) ~[spring-boot-2.7.10.jar:2.7.10]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292) ~[spring-boot-2.7.10.jar:2.7.10]
	at com.swyp.saratang.SaratangApplication.main(SaratangApplication.java:10) ~[classes/:?]
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'boardController' method 
com.swyp.saratang.controller.BoardController#getFashionListAlgorithm(String, int, int, int, HttpSession)
to {GET [/fashion]}: There is already 'boardController' bean method
com.swyp.saratang.controller.BoardController#getFashionList(int, int, String, int, HttpSession) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:669) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:635) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:332) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:420) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:299) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684) ~[?:1.8.0_431]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:297) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:266) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:225) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:213) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:205) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.26.jar:5.3.26]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.26.jar:5.3.26]
	... 16 more
[2025-02-21 15:34:19] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 15404 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-21 15:34:19] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-21 15:34:19] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-21 15:34:20] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-21 15:34:20] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-21 15:34:20] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-21 15:34:20] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-21 15:34:20] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-21 15:34:20] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 931 ms
[2025-02-21 15:34:22] [INFO] [Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8080"]
[2025-02-21 15:34:22] [INFO] [TomcatWebServer] - Tomcat started on port(s): 8080 (http) with context path ''
[2025-02-21 15:34:22] [INFO] [SaratangApplication] - Started SaratangApplication in 2.891 seconds (JVM running for 3.875)
[2025-02-21 15:34:26] [INFO] [[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2025-02-21 15:34:26] [INFO] [DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
[2025-02-21 15:34:26] [INFO] [DispatcherServlet] - Completed initialization in 1 ms
[2025-02-21 15:34:26] [INFO] [AbstractOpenApiResource] - Init duration for springdoc-openapi is: 263 ms
[2025-02-21 15:34:32] [INFO] [HikariDataSource] - HikariPool-1 - Starting...
[2025-02-21 15:34:32] [INFO] [HikariDataSource] - HikariPool-1 - Start completed.
[2025-02-21 15:34:32] [DEBUG] [getFashionListPaging] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ? OFFSET ?
[2025-02-21 15:34:32] [DEBUG] [getFashionListPaging] - ==> Parameters: fashion(String), 1(Integer), 1(Integer), 5(Integer), 0(Long)
[2025-02-21 15:34:33] [DEBUG] [getFashionListPaging] - <==      Total: 5
[2025-02-21 15:34:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:34:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 15:34:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:34:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:34:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:34:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:34:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:34:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 15:34:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:34:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:34:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 15:34:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:34:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:34:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 19(Integer)
[2025-02-21 15:34:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:34:33] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-21 15:34:33] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-21 15:34:33] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-21 15:34:41] [DEBUG] [getFashionListPaging] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ? OFFSET ?
[2025-02-21 15:34:41] [DEBUG] [getFashionListPaging] - ==> Parameters: fashion(String), 1(Integer), 1(Integer), 5(Integer), 5(Long)
[2025-02-21 15:34:41] [DEBUG] [getFashionListPaging] - <==      Total: 0
[2025-02-21 15:34:41] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-21 15:34:41] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-21 15:34:41] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-21 15:34:58] [DEBUG] [getFashionListPaging] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ? OFFSET ?
[2025-02-21 15:34:58] [DEBUG] [getFashionListPaging] - ==> Parameters: fashion(String), 1(Integer), 1(Integer), 10(Integer), 10(Long)
[2025-02-21 15:34:58] [DEBUG] [getFashionListPaging] - <==      Total: 0
[2025-02-21 15:34:58] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-21 15:34:58] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-21 15:34:58] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-21 15:35:04] [DEBUG] [getFashionListPaging] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ? OFFSET ?
[2025-02-21 15:35:04] [DEBUG] [getFashionListPaging] - ==> Parameters: fashion(String), 1(Integer), 1(Integer), 10(Integer), 10(Long)
[2025-02-21 15:35:04] [DEBUG] [getFashionListPaging] - <==      Total: 0
[2025-02-21 15:35:04] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-21 15:35:04] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-21 15:35:04] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-21 15:35:10] [DEBUG] [getFashionListPaging] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ? OFFSET ?
[2025-02-21 15:35:10] [DEBUG] [getFashionListPaging] - ==> Parameters: fashion(String), 1(Integer), 1(Integer), 10(Integer), 0(Long)
[2025-02-21 15:35:10] [DEBUG] [getFashionListPaging] - <==      Total: 5
[2025-02-21 15:35:10] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:35:10] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 15:35:10] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:35:10] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:35:10] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:35:10] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:35:10] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:35:10] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 15:35:10] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:35:10] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:35:10] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 15:35:10] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:35:10] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:35:10] [DEBUG] [getImagesByPostId] - ==> Parameters: 19(Integer)
[2025-02-21 15:35:10] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:35:10] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-21 15:35:10] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-21 15:35:10] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-21 15:35:59] [DEBUG] [getFashionListPaging] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ? OFFSET ?
[2025-02-21 15:35:59] [DEBUG] [getFashionListPaging] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer), 0(Long)
[2025-02-21 15:35:59] [DEBUG] [getFashionListPaging] - <==      Total: 10
[2025-02-21 15:35:59] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:35:59] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:35:59] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:35:59] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:35:59] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:35:59] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:35:59] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:35:59] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:35:59] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:35:59] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:35:59] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:35:59] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:35:59] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:35:59] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:35:59] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:35:59] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:35:59] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:36:00] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:36:00] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:36:00] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:36:00] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:36:00] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:36:00] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 15:36:00] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:36:00] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:36:00] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:36:00] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:36:00] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:36:00] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 15:36:00] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:36:00] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-21 15:36:00] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-21 15:36:00] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-21 15:36:10] [DEBUG] [getFashionListPaging] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ? OFFSET ?
[2025-02-21 15:36:10] [DEBUG] [getFashionListPaging] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer), 5(Long)
[2025-02-21 15:36:10] [DEBUG] [getFashionListPaging] - <==      Total: 5
[2025-02-21 15:36:10] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:36:10] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:36:10] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:36:10] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:36:10] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:36:10] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:36:10] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:36:10] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 15:36:10] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:36:10] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:36:10] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:36:10] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:36:10] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:36:10] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 15:36:10] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:36:10] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-21 15:36:10] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-21 15:36:10] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-21 15:36:16] [DEBUG] [getFashionListPaging] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ? OFFSET ?
[2025-02-21 15:36:16] [DEBUG] [getFashionListPaging] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer), 0(Long)
[2025-02-21 15:36:16] [DEBUG] [getFashionListPaging] - <==      Total: 5
[2025-02-21 15:36:16] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:36:16] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:36:16] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:36:16] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:36:16] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:36:16] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:36:16] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:36:16] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:36:16] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:36:16] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:36:16] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:36:16] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:36:16] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:36:16] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:36:16] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:36:16] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-21 15:36:16] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-21 15:36:16] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-21 15:38:13] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:38:13] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:38:13] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:38:13] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:38:13] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:38:13] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:38:13] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:38:13] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:38:13] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:38:13] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:38:13] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:38:13] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:38:13] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:38:13] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:38:13] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:38:13] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:38:13] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:38:13] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:38:13] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:38:13] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:38:13] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:38:13] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:38:13] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:38:13] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:38:20] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:38:20] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:38:20] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:38:20] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:38:20] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:38:20] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:38:20] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:38:20] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:38:20] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:38:20] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:38:20] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:38:20] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:38:20] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:38:20] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:38:20] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:38:20] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:38:20] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:38:20] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:38:20] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:38:20] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:38:20] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:38:20] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:38:20] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:38:20] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:45:43] [INFO] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
[2025-02-21 15:45:43] [INFO] [Http11NioProtocol] - Pausing ProtocolHandler ["http-nio-8080"]
[2025-02-21 15:45:43] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-21 15:45:43] [INFO] [[/]] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[2025-02-21 15:45:43] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
[2025-02-21 15:45:43] [INFO] [Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-8080"]
[2025-02-21 15:45:43] [INFO] [Http11NioProtocol] - Destroying ProtocolHandler ["http-nio-8080"]
[2025-02-21 15:45:43] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown initiated...
[2025-02-21 15:45:43] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown completed.
[2025-02-21 15:45:50] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 23612 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-21 15:45:50] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-21 15:45:50] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-21 15:45:51] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-21 15:45:51] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-21 15:45:51] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-21 15:45:51] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-21 15:45:51] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-21 15:45:51] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 941 ms
[2025-02-21 15:45:52] [INFO] [Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8080"]
[2025-02-21 15:45:52] [INFO] [TomcatWebServer] - Tomcat started on port(s): 8080 (http) with context path ''
[2025-02-21 15:45:52] [INFO] [SaratangApplication] - Started SaratangApplication in 2.873 seconds (JVM running for 3.832)
[2025-02-21 15:45:58] [INFO] [[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2025-02-21 15:45:58] [INFO] [DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
[2025-02-21 15:45:58] [INFO] [DispatcherServlet] - Completed initialization in 2 ms
[2025-02-21 15:45:59] [INFO] [AbstractOpenApiResource] - Init duration for springdoc-openapi is: 251 ms
[2025-02-21 15:46:29] [INFO] [HikariDataSource] - HikariPool-1 - Starting...
[2025-02-21 15:46:30] [INFO] [HikariDataSource] - HikariPool-1 - Start completed.
[2025-02-21 15:46:30] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:46:30] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:30] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:46:30] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:46:30] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:30] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:46:30] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:46:30] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:30] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:46:30] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:30] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-21 15:46:30] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:30] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:30] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:46:30] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:30] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:30] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:46:30] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:30] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:30] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:46:30] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:30] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:30] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:46:30] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:36] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:46:36] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:36] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:46:36] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:46:36] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:36] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:46:36] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:46:36] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:36] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:46:36] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:36] [DEBUG] [getImagesByPostId] - ==> Parameters: 16(Integer)
[2025-02-21 15:46:36] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:36] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:36] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:46:36] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:36] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:36] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:46:36] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:36] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:36] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:46:36] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:36] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:36] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:46:36] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:40] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:46:40] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:40] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:46:40] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:46:40] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:40] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:46:40] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:46:40] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:40] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:46:40] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:40] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:46:40] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:40] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:40] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 15:46:40] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:40] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:40] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:46:40] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:40] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:40] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:46:41] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:41] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:41] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:46:41] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:44] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:46:44] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:44] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:46:44] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:46:44] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:44] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:46:44] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:46:44] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:44] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:46:44] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:44] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:46:44] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:44] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:44] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:46:44] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:44] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:44] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:46:44] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:44] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:44] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-21 15:46:44] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:44] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:44] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:46:44] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:48] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:46:48] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:48] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:46:48] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:46:48] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:48] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:46:48] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:46:48] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:48] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:46:48] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:48] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:46:48] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:48] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:48] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 15:46:48] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:48] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:48] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:46:48] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:48] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:48] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:46:48] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:48] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:48] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:46:48] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:53] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:46:53] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:53] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:46:53] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:46:53] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:53] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:46:53] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:46:53] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:53] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:46:53] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:53] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:46:53] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:53] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:53] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 15:46:53] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:53] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:53] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:46:53] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:53] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:53] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-21 15:46:53] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:53] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:53] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:46:53] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:57] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:46:57] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:57] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:46:57] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:46:57] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:57] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:46:57] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:46:57] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:46:57] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:46:57] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:57] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 15:46:57] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:57] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:57] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:46:57] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:57] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:57] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:46:57] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:57] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:57] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:46:57] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:46:57] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:46:57] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:46:57] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:47:02] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:47:02] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:47:02] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:47:02] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:47:02] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:47:02] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:47:02] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:47:02] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:47:02] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:47:02] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:47:02] [DEBUG] [getImagesByPostId] - ==> Parameters: 16(Integer)
[2025-02-21 15:47:02] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:47:02] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:47:02] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:47:02] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:47:02] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:47:02] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:47:02] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:47:02] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:47:02] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:47:02] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:47:02] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:47:02] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:47:02] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:47:06] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:47:06] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:47:06] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:47:06] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:47:06] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:47:06] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:47:06] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:47:06] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:47:06] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:47:06] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:47:06] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:47:06] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:47:06] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:47:06] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:47:06] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:47:06] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:47:06] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:47:06] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:47:06] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:47:06] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:47:06] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:47:06] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:47:06] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 15:47:06] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:47:12] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:47:12] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 1(Integer)
[2025-02-21 15:47:12] [DEBUG] [getFashionListLatest] - <==      Total: 1
[2025-02-21 15:47:12] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:47:12] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 1(Integer)
[2025-02-21 15:47:12] [DEBUG] [getFashionListPopular] - <==      Total: 1
[2025-02-21 15:47:12] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:47:12] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 1(Integer)
[2025-02-21 15:47:12] [DEBUG] [getFashionListRandom] - <==      Total: 1
[2025-02-21 15:47:33] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:47:33] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 2(Integer)
[2025-02-21 15:47:33] [DEBUG] [getFashionListLatest] - <==      Total: 2
[2025-02-21 15:47:33] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:47:33] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 2(Integer)
[2025-02-21 15:47:33] [DEBUG] [getFashionListPopular] - <==      Total: 2
[2025-02-21 15:47:33] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:47:33] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 2(Integer)
[2025-02-21 15:47:33] [DEBUG] [getFashionListRandom] - <==      Total: 2
[2025-02-21 15:47:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:47:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:47:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:47:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:47:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:47:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:47:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:47:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 19(Integer)
[2025-02-21 15:47:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:47:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:47:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:47:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:47:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:47:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:47:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:47:45] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:47:45] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 3(Integer)
[2025-02-21 15:47:45] [DEBUG] [getFashionListLatest] - <==      Total: 3
[2025-02-21 15:47:45] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:47:45] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 3(Integer)
[2025-02-21 15:47:45] [DEBUG] [getFashionListPopular] - <==      Total: 3
[2025-02-21 15:47:45] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:47:45] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 3(Integer)
[2025-02-21 15:47:45] [DEBUG] [getFashionListRandom] - <==      Total: 3
[2025-02-21 15:47:52] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:47:52] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:47:52] [DEBUG] [getFashionListLatest] - <==      Total: 4
[2025-02-21 15:47:52] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:47:52] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:47:52] [DEBUG] [getFashionListPopular] - <==      Total: 4
[2025-02-21 15:47:52] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:47:52] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:47:52] [DEBUG] [getFashionListRandom] - <==      Total: 4
[2025-02-21 15:47:57] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:47:57] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:47:57] [DEBUG] [getFashionListLatest] - <==      Total: 4
[2025-02-21 15:47:57] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:47:57] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:47:57] [DEBUG] [getFashionListPopular] - <==      Total: 4
[2025-02-21 15:47:57] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:47:57] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:47:57] [DEBUG] [getFashionListRandom] - <==      Total: 4
[2025-02-21 15:47:57] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:47:57] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:47:57] [DEBUG] [getFashionListLatest] - <==      Total: 4
[2025-02-21 15:47:57] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:47:57] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:47:57] [DEBUG] [getFashionListPopular] - <==      Total: 4
[2025-02-21 15:47:57] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:47:57] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:47:57] [DEBUG] [getFashionListRandom] - <==      Total: 4
[2025-02-21 15:47:58] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:47:58] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:47:58] [DEBUG] [getFashionListLatest] - <==      Total: 4
[2025-02-21 15:47:58] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:47:58] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:47:58] [DEBUG] [getFashionListPopular] - <==      Total: 4
[2025-02-21 15:47:58] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:47:58] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:47:58] [DEBUG] [getFashionListRandom] - <==      Total: 4
[2025-02-21 15:47:59] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:47:59] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:47:59] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:47:59] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:47:59] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:47:59] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:48:00] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:00] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:00] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:48:00] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:00] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:00] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:48:00] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:00] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:00] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:48:00] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:00] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:00] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - ==> Parameters: 19(Integer)
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:00] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:48:01] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:01] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:01] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 15:48:01] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:01] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:01] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:01] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:05] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:05] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:05] [DEBUG] [getFashionListLatest] - <==      Total: 6
[2025-02-21 15:48:05] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:05] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:05] [DEBUG] [getFashionListPopular] - <==      Total: 6
[2025-02-21 15:48:05] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:05] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:05] [DEBUG] [getFashionListRandom] - <==      Total: 6
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - ==> Parameters: 16(Integer)
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:48:05] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:07] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:07] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:07] [DEBUG] [getFashionListLatest] - <==      Total: 6
[2025-02-21 15:48:07] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:07] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:07] [DEBUG] [getFashionListPopular] - <==      Total: 6
[2025-02-21 15:48:07] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:07] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:07] [DEBUG] [getFashionListRandom] - <==      Total: 6
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - ==> Parameters: 16(Integer)
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:07] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:08] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:08] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:08] [DEBUG] [getFashionListLatest] - <==      Total: 6
[2025-02-21 15:48:08] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:08] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:08] [DEBUG] [getFashionListPopular] - <==      Total: 6
[2025-02-21 15:48:08] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:08] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:08] [DEBUG] [getFashionListRandom] - <==      Total: 6
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==> Parameters: 16(Integer)
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:08] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:08] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:08] [DEBUG] [getFashionListLatest] - <==      Total: 6
[2025-02-21 15:48:08] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:08] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:08] [DEBUG] [getFashionListPopular] - <==      Total: 6
[2025-02-21 15:48:08] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:08] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:08] [DEBUG] [getFashionListRandom] - <==      Total: 6
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==> Parameters: 16(Integer)
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 15:48:08] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:09] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:09] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:09] [DEBUG] [getFashionListLatest] - <==      Total: 6
[2025-02-21 15:48:09] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:09] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:09] [DEBUG] [getFashionListPopular] - <==      Total: 6
[2025-02-21 15:48:09] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:09] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:09] [DEBUG] [getFashionListRandom] - <==      Total: 6
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:09] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:09] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:09] [DEBUG] [getFashionListLatest] - <==      Total: 6
[2025-02-21 15:48:09] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:09] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:09] [DEBUG] [getFashionListPopular] - <==      Total: 6
[2025-02-21 15:48:09] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:09] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:09] [DEBUG] [getFashionListRandom] - <==      Total: 6
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:48:09] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:10] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:10] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:10] [DEBUG] [getFashionListLatest] - <==      Total: 6
[2025-02-21 15:48:10] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:10] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:10] [DEBUG] [getFashionListPopular] - <==      Total: 6
[2025-02-21 15:48:10] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:10] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 6(Integer)
[2025-02-21 15:48:10] [DEBUG] [getFashionListRandom] - <==      Total: 6
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - ==> Parameters: 15(Integer)
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - ==> Parameters: 19(Integer)
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 15:48:10] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:11] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:11] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:11] [DEBUG] [getFashionListLatest] - <==      Total: 4
[2025-02-21 15:48:11] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:11] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:11] [DEBUG] [getFashionListPopular] - <==      Total: 4
[2025-02-21 15:48:11] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:11] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:11] [DEBUG] [getFashionListRandom] - <==      Total: 4
[2025-02-21 15:48:12] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:12] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:12] [DEBUG] [getFashionListLatest] - <==      Total: 4
[2025-02-21 15:48:12] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:12] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:12] [DEBUG] [getFashionListPopular] - <==      Total: 4
[2025-02-21 15:48:12] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:12] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:12] [DEBUG] [getFashionListRandom] - <==      Total: 4
[2025-02-21 15:48:12] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:12] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:12] [DEBUG] [getFashionListLatest] - <==      Total: 4
[2025-02-21 15:48:12] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:12] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:12] [DEBUG] [getFashionListPopular] - <==      Total: 4
[2025-02-21 15:48:12] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:12] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:12] [DEBUG] [getFashionListRandom] - <==      Total: 4
[2025-02-21 15:48:13] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:13] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:13] [DEBUG] [getFashionListLatest] - <==      Total: 4
[2025-02-21 15:48:13] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:13] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:13] [DEBUG] [getFashionListPopular] - <==      Total: 4
[2025-02-21 15:48:13] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:13] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:13] [DEBUG] [getFashionListRandom] - <==      Total: 4
[2025-02-21 15:48:13] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:13] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:13] [DEBUG] [getFashionListLatest] - <==      Total: 4
[2025-02-21 15:48:13] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:13] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:13] [DEBUG] [getFashionListPopular] - <==      Total: 4
[2025-02-21 15:48:13] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:13] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:13] [DEBUG] [getFashionListRandom] - <==      Total: 4
[2025-02-21 15:48:13] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:13] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:13] [DEBUG] [getFashionListLatest] - <==      Total: 4
[2025-02-21 15:48:13] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:13] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:13] [DEBUG] [getFashionListPopular] - <==      Total: 4
[2025-02-21 15:48:13] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:13] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:13] [DEBUG] [getFashionListRandom] - <==      Total: 4
[2025-02-21 15:48:14] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:14] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:14] [DEBUG] [getFashionListLatest] - <==      Total: 4
[2025-02-21 15:48:14] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:14] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:14] [DEBUG] [getFashionListPopular] - <==      Total: 4
[2025-02-21 15:48:14] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:14] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:14] [DEBUG] [getFashionListRandom] - <==      Total: 4
[2025-02-21 15:48:14] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:14] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:14] [DEBUG] [getFashionListLatest] - <==      Total: 4
[2025-02-21 15:48:14] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:14] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:14] [DEBUG] [getFashionListPopular] - <==      Total: 4
[2025-02-21 15:48:14] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:14] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:14] [DEBUG] [getFashionListRandom] - <==      Total: 4
[2025-02-21 15:48:15] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:15] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:15] [DEBUG] [getFashionListLatest] - <==      Total: 4
[2025-02-21 15:48:15] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:15] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:15] [DEBUG] [getFashionListPopular] - <==      Total: 4
[2025-02-21 15:48:15] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:15] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:15] [DEBUG] [getFashionListRandom] - <==      Total: 4
[2025-02-21 15:48:15] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:15] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:15] [DEBUG] [getFashionListLatest] - <==      Total: 4
[2025-02-21 15:48:15] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:15] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:15] [DEBUG] [getFashionListPopular] - <==      Total: 4
[2025-02-21 15:48:15] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:15] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:15] [DEBUG] [getFashionListRandom] - <==      Total: 4
[2025-02-21 15:48:15] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:15] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:15] [DEBUG] [getFashionListLatest] - <==      Total: 4
[2025-02-21 15:48:15] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:15] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:15] [DEBUG] [getFashionListPopular] - <==      Total: 4
[2025-02-21 15:48:15] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:15] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:15] [DEBUG] [getFashionListRandom] - <==      Total: 4
[2025-02-21 15:48:16] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:16] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:16] [DEBUG] [getFashionListLatest] - <==      Total: 4
[2025-02-21 15:48:16] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:16] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:16] [DEBUG] [getFashionListPopular] - <==      Total: 4
[2025-02-21 15:48:16] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:16] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:16] [DEBUG] [getFashionListRandom] - <==      Total: 4
[2025-02-21 15:48:16] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:16] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:16] [DEBUG] [getFashionListLatest] - <==      Total: 4
[2025-02-21 15:48:16] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:16] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:16] [DEBUG] [getFashionListPopular] - <==      Total: 4
[2025-02-21 15:48:16] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:16] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 4(Integer)
[2025-02-21 15:48:16] [DEBUG] [getFashionListRandom] - <==      Total: 4
[2025-02-21 15:48:18] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:18] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:18] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:48:18] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:18] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:18] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:48:18] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:18] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:18] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:48:18] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:18] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:18] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:48:18] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:18] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:18] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:48:18] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:18] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:18] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:48:19] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:19] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:19] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:48:19] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:19] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:19] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:48:19] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:19] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:19] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:48:19] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:19] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:19] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:48:19] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:19] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:19] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:48:19] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:19] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:19] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:48:19] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:19] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:19] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:48:19] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:19] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:19] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:48:19] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:19] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:19] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:48:19] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:19] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:48:19] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:19] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:19] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:19] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:19] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:19] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:48:19] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 15:48:20] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:23] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:23] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:23] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:48:23] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:23] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:23] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:48:23] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:23] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:23] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==> Parameters: 19(Integer)
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:23] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:23] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:23] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:48:23] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:23] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:23] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:48:23] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:23] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:23] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==> Parameters: 15(Integer)
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - ==> Parameters: 19(Integer)
[2025-02-21 15:48:23] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:24] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:24] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:24] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:48:24] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:24] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:24] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:48:24] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:24] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:48:24] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:48:30] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:30] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:30] [DEBUG] [getFashionListLatest] - <==      Total: 10
[2025-02-21 15:48:30] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:30] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:30] [DEBUG] [getFashionListPopular] - <==      Total: 10
[2025-02-21 15:48:30] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:30] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:30] [DEBUG] [getFashionListRandom] - <==      Total: 10
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - ==> Parameters: 15(Integer)
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:48:30] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:31] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:31] [DEBUG] [getFashionListLatest] - <==      Total: 10
[2025-02-21 15:48:31] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:31] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:31] [DEBUG] [getFashionListPopular] - <==      Total: 10
[2025-02-21 15:48:31] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:31] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:31] [DEBUG] [getFashionListRandom] - <==      Total: 10
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 19(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 16(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:31] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:31] [DEBUG] [getFashionListLatest] - <==      Total: 10
[2025-02-21 15:48:31] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:31] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:31] [DEBUG] [getFashionListPopular] - <==      Total: 10
[2025-02-21 15:48:31] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:31] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:31] [DEBUG] [getFashionListRandom] - <==      Total: 10
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 15(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 16(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:31] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:31] [DEBUG] [getFashionListLatest] - <==      Total: 10
[2025-02-21 15:48:31] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:31] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:31] [DEBUG] [getFashionListPopular] - <==      Total: 10
[2025-02-21 15:48:31] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:31] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:31] [DEBUG] [getFashionListRandom] - <==      Total: 10
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:31] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 19(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:32] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:32] [DEBUG] [getFashionListLatest] - <==      Total: 10
[2025-02-21 15:48:32] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:32] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:32] [DEBUG] [getFashionListPopular] - <==      Total: 10
[2025-02-21 15:48:32] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:32] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:32] [DEBUG] [getFashionListRandom] - <==      Total: 10
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 16(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:32] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:32] [DEBUG] [getFashionListLatest] - <==      Total: 10
[2025-02-21 15:48:32] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:32] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:32] [DEBUG] [getFashionListPopular] - <==      Total: 10
[2025-02-21 15:48:32] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:32] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:32] [DEBUG] [getFashionListRandom] - <==      Total: 10
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 15(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:33] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:33] [DEBUG] [getFashionListLatest] - <==      Total: 10
[2025-02-21 15:48:33] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:33] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:33] [DEBUG] [getFashionListPopular] - <==      Total: 10
[2025-02-21 15:48:33] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:33] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:33] [DEBUG] [getFashionListRandom] - <==      Total: 10
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 15(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 16(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 19(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:33] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:33] [DEBUG] [getFashionListLatest] - <==      Total: 10
[2025-02-21 15:48:33] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:33] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:33] [DEBUG] [getFashionListPopular] - <==      Total: 10
[2025-02-21 15:48:33] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:33] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:33] [DEBUG] [getFashionListRandom] - <==      Total: 10
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:33] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:33] [DEBUG] [getFashionListLatest] - <==      Total: 10
[2025-02-21 15:48:33] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:33] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:33] [DEBUG] [getFashionListPopular] - <==      Total: 10
[2025-02-21 15:48:33] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:33] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:33] [DEBUG] [getFashionListRandom] - <==      Total: 10
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 15:48:33] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:34] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:34] [DEBUG] [getFashionListLatest] - <==      Total: 10
[2025-02-21 15:48:34] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:34] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:34] [DEBUG] [getFashionListPopular] - <==      Total: 10
[2025-02-21 15:48:34] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:34] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:34] [DEBUG] [getFashionListRandom] - <==      Total: 10
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 16(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 15(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:34] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:34] [DEBUG] [getFashionListLatest] - <==      Total: 10
[2025-02-21 15:48:34] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:34] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:34] [DEBUG] [getFashionListPopular] - <==      Total: 10
[2025-02-21 15:48:34] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:34] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:34] [DEBUG] [getFashionListRandom] - <==      Total: 10
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 16(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:34] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:34] [DEBUG] [getFashionListLatest] - <==      Total: 10
[2025-02-21 15:48:34] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:48:34] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:34] [DEBUG] [getFashionListPopular] - <==      Total: 10
[2025-02-21 15:48:34] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:48:34] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:48:34] [DEBUG] [getFashionListRandom] - <==      Total: 10
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 15(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 15:48:34] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:53:44] [INFO] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
[2025-02-21 15:53:44] [INFO] [Http11NioProtocol] - Pausing ProtocolHandler ["http-nio-8080"]
[2025-02-21 15:53:44] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-21 15:53:44] [INFO] [[/]] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[2025-02-21 15:53:44] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
[2025-02-21 15:53:44] [INFO] [Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-8080"]
[2025-02-21 15:53:44] [INFO] [Http11NioProtocol] - Destroying ProtocolHandler ["http-nio-8080"]
[2025-02-21 15:53:45] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown initiated...
[2025-02-21 15:53:45] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown completed.
[2025-02-21 15:53:48] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 10736 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-21 15:53:48] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-21 15:53:48] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-21 15:53:49] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-21 15:53:49] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-21 15:53:49] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-21 15:53:49] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-21 15:53:49] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-21 15:53:49] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 969 ms
[2025-02-21 15:53:51] [INFO] [Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8080"]
[2025-02-21 15:53:51] [INFO] [TomcatWebServer] - Tomcat started on port(s): 8080 (http) with context path ''
[2025-02-21 15:53:51] [INFO] [SaratangApplication] - Started SaratangApplication in 2.906 seconds (JVM running for 3.88)
[2025-02-21 15:53:56] [INFO] [[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2025-02-21 15:53:56] [INFO] [DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
[2025-02-21 15:53:57] [INFO] [DispatcherServlet] - Completed initialization in 1 ms
[2025-02-21 15:53:57] [INFO] [HikariDataSource] - HikariPool-1 - Starting...
[2025-02-21 15:53:57] [INFO] [HikariDataSource] - HikariPool-1 - Start completed.
[2025-02-21 15:53:57] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:53:57] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:53:57] [DEBUG] [getFashionListLatest] - <==      Total: 10
[2025-02-21 15:53:57] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:53:57] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:53:57] [DEBUG] [getFashionListPopular] - <==      Total: 10
[2025-02-21 15:53:57] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:53:57] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 10(Integer)
[2025-02-21 15:53:57] [DEBUG] [getFashionListRandom] - <==      Total: 10
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - ==> Parameters: 16(Integer)
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - ==> Parameters: 23(Integer)
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - ==> Parameters: 24(Integer)
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - ==> Parameters: 19(Integer)
[2025-02-21 15:53:57] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:54:01] [DEBUG] [getFashionListLatest] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY p.REGDATE DESC LIMIT ?
[2025-02-21 15:54:01] [DEBUG] [getFashionListLatest] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:54:01] [DEBUG] [getFashionListLatest] - <==      Total: 5
[2025-02-21 15:54:01] [DEBUG] [getFashionListPopular] - ==>  Preparing: SELECT p.ID, p.USER_ID, p.CATEGORY_ID, p.CONCERN_KEYWORD_ID, p.POST_TYPE, p.BRAND, p.ORIGINAL_PRICE, p.DISCOUNT_PRICE, p.PRODUCT_LINK, p.TITLE, p.CURRENT_PRICE, p.MEMO, p.IS_SPEC_PUBLIC, p.DETAIL_MEMO, p.REGDATE, COALESCE(j.judgement_count, 0) AS popularity FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id LEFT JOIN ( SELECT post_id, COUNT(*) AS judgement_count FROM judgements GROUP BY post_id ) j ON p.ID = j.post_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY popularity DESC, p.REGDATE DESC LIMIT ?
[2025-02-21 15:54:01] [DEBUG] [getFashionListPopular] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:54:01] [DEBUG] [getFashionListPopular] - <==      Total: 5
[2025-02-21 15:54:01] [DEBUG] [getFashionListRandom] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p JOIN user_categories uc ON p.CATEGORY_ID = uc.category_id WHERE p.POST_TYPE = ? AND uc.user_id = ? AND p.ID NOT IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? ) ORDER BY RAND() LIMIT ?
[2025-02-21 15:54:01] [DEBUG] [getFashionListRandom] - ==> Parameters: fashion(String), 2(Integer), 2(Integer), 5(Integer)
[2025-02-21 15:54:01] [DEBUG] [getFashionListRandom] - <==      Total: 5
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - ==> Parameters: 26(Integer)
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - ==> Parameters: 29(Integer)
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - ==> Parameters: 28(Integer)
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - ==> Parameters: 27(Integer)
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - ==> Parameters: 19(Integer)
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - ==> Parameters: 15(Integer)
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - ==> Parameters: 25(Integer)
[2025-02-21 15:54:01] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 15:58:53] [INFO] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
[2025-02-21 15:58:53] [INFO] [Http11NioProtocol] - Pausing ProtocolHandler ["http-nio-8080"]
[2025-02-21 15:58:53] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-21 15:58:53] [INFO] [[/]] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[2025-02-21 15:58:53] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
[2025-02-21 15:58:53] [INFO] [Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-8080"]
[2025-02-21 15:58:53] [INFO] [Http11NioProtocol] - Destroying ProtocolHandler ["http-nio-8080"]
[2025-02-21 15:58:53] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown initiated...
[2025-02-21 15:58:53] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown completed.
[2025-02-21 16:22:34] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 4832 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-21 16:22:34] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-21 16:22:34] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-21 16:22:35] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-21 16:22:35] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-21 16:22:35] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-21 16:22:35] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-21 16:22:35] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-21 16:22:35] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 1018 ms
[2025-02-21 16:22:36] [INFO] [Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8080"]
[2025-02-21 16:22:36] [INFO] [TomcatWebServer] - Tomcat started on port(s): 8080 (http) with context path ''
[2025-02-21 16:22:36] [INFO] [SaratangApplication] - Started SaratangApplication in 2.94 seconds (JVM running for 4.031)
[2025-02-21 16:23:50] [INFO] [[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2025-02-21 16:23:50] [INFO] [DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
[2025-02-21 16:23:50] [INFO] [DispatcherServlet] - Completed initialization in 1 ms
[2025-02-21 16:23:51] [INFO] [AbstractOpenApiResource] - Init duration for springdoc-openapi is: 393 ms
[2025-02-21 16:26:30] [INFO] [HikariDataSource] - HikariPool-1 - Starting...
[2025-02-21 16:26:31] [INFO] [HikariDataSource] - HikariPool-1 - Start completed.
[2025-02-21 16:26:31] [DEBUG] [existJudgeByUserIdAndPostId] - ==>  Preparing: SELECT COUNT(*) FROM judgements WHERE user_id = ? AND post_id = ?
[2025-02-21 16:26:31] [DEBUG] [existJudgeByUserIdAndPostId] - ==> Parameters: 1(Integer), 17(Integer)
[2025-02-21 16:26:31] [DEBUG] [existJudgeByUserIdAndPostId] - <==      Total: 1
[2025-02-21 16:26:31] [DEBUG] [addJudgement] - ==>  Preparing: INSERT INTO judgements (user_id, post_id, judgement, regdate) VALUES (?, ?, ?, NOW());
[2025-02-21 16:26:31] [DEBUG] [addJudgement] - ==> Parameters: 1(Integer), 17(Integer), positive(String)
[2025-02-21 16:26:31] [DEBUG] [addJudgement] - <==    Updates: 1
[2025-02-21 16:26:35] [DEBUG] [existJudgeByUserIdAndPostId] - ==>  Preparing: SELECT COUNT(*) FROM judgements WHERE user_id = ? AND post_id = ?
[2025-02-21 16:26:35] [DEBUG] [existJudgeByUserIdAndPostId] - ==> Parameters: 1(Integer), 18(Integer)
[2025-02-21 16:26:35] [DEBUG] [existJudgeByUserIdAndPostId] - <==      Total: 1
[2025-02-21 16:26:35] [DEBUG] [addJudgement] - ==>  Preparing: INSERT INTO judgements (user_id, post_id, judgement, regdate) VALUES (?, ?, ?, NOW());
[2025-02-21 16:26:35] [DEBUG] [addJudgement] - ==> Parameters: 1(Integer), 18(Integer), positive(String)
[2025-02-21 16:26:35] [DEBUG] [addJudgement] - <==    Updates: 1
[2025-02-21 16:26:39] [DEBUG] [existJudgeByUserIdAndPostId] - ==>  Preparing: SELECT COUNT(*) FROM judgements WHERE user_id = ? AND post_id = ?
[2025-02-21 16:26:39] [DEBUG] [existJudgeByUserIdAndPostId] - ==> Parameters: 1(Integer), 19(Integer)
[2025-02-21 16:26:39] [DEBUG] [existJudgeByUserIdAndPostId] - <==      Total: 1
[2025-02-21 16:26:39] [DEBUG] [addJudgement] - ==>  Preparing: INSERT INTO judgements (user_id, post_id, judgement, regdate) VALUES (?, ?, ?, NOW());
[2025-02-21 16:26:39] [DEBUG] [addJudgement] - ==> Parameters: 1(Integer), 19(Integer), positive(String)
[2025-02-21 16:26:39] [DEBUG] [addJudgement] - <==    Updates: 1
[2025-02-21 16:26:46] [DEBUG] [existJudgeByUserIdAndPostId] - ==>  Preparing: SELECT COUNT(*) FROM judgements WHERE user_id = ? AND post_id = ?
[2025-02-21 16:26:46] [DEBUG] [existJudgeByUserIdAndPostId] - ==> Parameters: 1(Integer), 20(Integer)
[2025-02-21 16:26:46] [DEBUG] [existJudgeByUserIdAndPostId] - <==      Total: 1
[2025-02-21 16:26:46] [DEBUG] [addJudgement] - ==>  Preparing: INSERT INTO judgements (user_id, post_id, judgement, regdate) VALUES (?, ?, ?, NOW());
[2025-02-21 16:26:46] [DEBUG] [addJudgement] - ==> Parameters: 1(Integer), 20(Integer), negative(String)
[2025-02-21 16:26:46] [DEBUG] [addJudgement] - <==    Updates: 1
[2025-02-21 16:26:48] [DEBUG] [existJudgeByUserIdAndPostId] - ==>  Preparing: SELECT COUNT(*) FROM judgements WHERE user_id = ? AND post_id = ?
[2025-02-21 16:26:48] [DEBUG] [existJudgeByUserIdAndPostId] - ==> Parameters: 1(Integer), 21(Integer)
[2025-02-21 16:26:48] [DEBUG] [existJudgeByUserIdAndPostId] - <==      Total: 1
[2025-02-21 16:26:48] [DEBUG] [addJudgement] - ==>  Preparing: INSERT INTO judgements (user_id, post_id, judgement, regdate) VALUES (?, ?, ?, NOW());
[2025-02-21 16:26:48] [DEBUG] [addJudgement] - ==> Parameters: 1(Integer), 21(Integer), negative(String)
[2025-02-21 16:26:48] [DEBUG] [addJudgement] - <==    Updates: 1
[2025-02-21 16:26:49] [DEBUG] [existJudgeByUserIdAndPostId] - ==>  Preparing: SELECT COUNT(*) FROM judgements WHERE user_id = ? AND post_id = ?
[2025-02-21 16:26:49] [DEBUG] [existJudgeByUserIdAndPostId] - ==> Parameters: 1(Integer), 22(Integer)
[2025-02-21 16:26:49] [DEBUG] [existJudgeByUserIdAndPostId] - <==      Total: 1
[2025-02-21 16:26:50] [DEBUG] [existJudgeByUserIdAndPostId] - ==>  Preparing: SELECT COUNT(*) FROM judgements WHERE user_id = ? AND post_id = ?
[2025-02-21 16:26:50] [DEBUG] [existJudgeByUserIdAndPostId] - ==> Parameters: 1(Integer), 22(Integer)
[2025-02-21 16:26:50] [DEBUG] [existJudgeByUserIdAndPostId] - <==      Total: 1
[2025-02-21 16:41:58] [INFO] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
[2025-02-21 16:41:59] [INFO] [Http11NioProtocol] - Pausing ProtocolHandler ["http-nio-8080"]
[2025-02-21 16:41:59] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-21 16:41:59] [INFO] [[/]] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[2025-02-21 16:41:59] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
[2025-02-21 16:41:59] [INFO] [Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-8080"]
[2025-02-21 16:41:59] [INFO] [Http11NioProtocol] - Destroying ProtocolHandler ["http-nio-8080"]
[2025-02-21 16:41:59] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown initiated...
[2025-02-21 16:41:59] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown completed.
[2025-02-21 16:52:16] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 27488 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-21 16:52:16] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-21 16:52:16] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-21 16:52:17] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-21 16:52:17] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-21 16:52:17] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-21 16:52:17] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-21 16:52:17] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-21 16:52:17] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 921 ms
[2025-02-21 16:52:19] [INFO] [Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8080"]
[2025-02-21 16:52:19] [INFO] [TomcatWebServer] - Tomcat started on port(s): 8080 (http) with context path ''
[2025-02-21 16:52:19] [INFO] [SaratangApplication] - Started SaratangApplication in 2.773 seconds (JVM running for 3.776)
[2025-02-21 16:52:35] [INFO] [[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2025-02-21 16:52:35] [INFO] [DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
[2025-02-21 16:52:35] [INFO] [DispatcherServlet] - Completed initialization in 3 ms
[2025-02-21 16:52:36] [INFO] [AbstractOpenApiResource] - Init duration for springdoc-openapi is: 439 ms
[2025-02-21 16:52:49] [INFO] [HikariDataSource] - HikariPool-1 - Starting...
[2025-02-21 16:52:50] [INFO] [HikariDataSource] - HikariPool-1 - Start completed.
[2025-02-21 16:52:50] [DEBUG] [getHistory] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p WHERE p.POST_TYPE = ? AND p.ID IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? AND j.judgement = ? ) ORDER BY p.REGDATE ? LIMIT ? OFFSET ?
[2025-02-21 16:52:50] [DEBUG] [getHistory] - ==> Parameters: fashion(String), 1(Integer), positive(String), null, 5(Integer), 0(Long)
[2025-02-21 16:52:50] [ERROR] [[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null
	    LIMIT 5 OFFSET 0' at line 10
### The error may exist in file [C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes\mapper\BoardMapper.xml]
### The error may involve com.swyp.saratang.mapper.BoardMapper.getHistory-Inline
### The error occurred while setting parameters
### SQL: SELECT           p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE,          p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE      FROM posts p      WHERE p.POST_TYPE = ?        AND p.ID IN (            SELECT j.post_id FROM judgements j             WHERE j.user_id = ? AND j.judgement = ?        )      ORDER BY p.REGDATE ?      LIMIT ? OFFSET ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null
	    LIMIT 5 OFFSET 0' at line 10
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null
	    LIMIT 5 OFFSET 0' at line 10] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null
	    LIMIT 5 OFFSET 0' at line 10
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58) ~[mybatis-3.5.13.jar:3.5.13]
	at com.sun.proxy.$Proxy127.execute(Unknown Source) ~[?:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:333) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142) ~[mybatis-3.5.13.jar:3.5.13]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-2.1.1.jar:2.1.1]
	at com.sun.proxy.$Proxy89.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-2.1.1.jar:2.1.1]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86) ~[mybatis-3.5.13.jar:3.5.13]
	at com.sun.proxy.$Proxy92.getHistory(Unknown Source) ~[?:?]
	at com.swyp.saratang.service.BoardService.getHistory(BoardService.java:144) ~[classes/:?]
	at com.swyp.saratang.controller.BoardController.getHistory(BoardController.java:80) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:67) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:750) ~[?:1.8.0_431]
[2025-02-21 16:59:14] [INFO] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
[2025-02-21 16:59:15] [INFO] [Http11NioProtocol] - Pausing ProtocolHandler ["http-nio-8080"]
[2025-02-21 16:59:15] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-21 16:59:15] [INFO] [[/]] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[2025-02-21 16:59:15] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
[2025-02-21 16:59:15] [INFO] [Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-8080"]
[2025-02-21 16:59:15] [INFO] [Http11NioProtocol] - Destroying ProtocolHandler ["http-nio-8080"]
[2025-02-21 16:59:15] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown initiated...
[2025-02-21 16:59:15] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown completed.
[2025-02-21 17:00:45] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 22576 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-21 17:00:45] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-21 17:00:45] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-21 17:00:46] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-21 17:00:46] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-21 17:00:46] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-21 17:00:46] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-21 17:00:46] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-21 17:00:46] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 929 ms
[2025-02-21 17:00:48] [INFO] [Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8080"]
[2025-02-21 17:00:48] [INFO] [TomcatWebServer] - Tomcat started on port(s): 8080 (http) with context path ''
[2025-02-21 17:00:48] [INFO] [SaratangApplication] - Started SaratangApplication in 2.773 seconds (JVM running for 3.832)
[2025-02-21 17:00:52] [INFO] [[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2025-02-21 17:00:52] [INFO] [DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
[2025-02-21 17:00:52] [INFO] [DispatcherServlet] - Completed initialization in 1 ms
[2025-02-21 17:00:53] [INFO] [AbstractOpenApiResource] - Init duration for springdoc-openapi is: 277 ms
[2025-02-21 17:01:16] [ERROR] [[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'sort' in 'class com.swyp.saratang.data.RequestList'] with root cause
org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'sort' in 'class com.swyp.saratang.data.RequestList'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:387) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:162) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:159) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:116) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.BaseExecutor.createCacheKey(BaseExecutor.java:222) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.CachingExecutor.createCacheKey(CachingExecutor.java:149) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142) ~[mybatis-3.5.13.jar:3.5.13]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-2.1.1.jar:2.1.1]
	at com.sun.proxy.$Proxy89.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-2.1.1.jar:2.1.1]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86) ~[mybatis-3.5.13.jar:3.5.13]
	at com.sun.proxy.$Proxy92.getHistory(Unknown Source) ~[?:?]
	at com.swyp.saratang.service.BoardService.getHistory(BoardService.java:145) ~[classes/:?]
	at com.swyp.saratang.controller.BoardController.getHistory(BoardController.java:84) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:67) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:750) ~[?:1.8.0_431]
[2025-02-21 17:01:49] [INFO] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
[2025-02-21 17:01:49] [INFO] [Http11NioProtocol] - Pausing ProtocolHandler ["http-nio-8080"]
[2025-02-21 17:01:49] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-21 17:01:49] [INFO] [[/]] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[2025-02-21 17:01:49] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-18] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-21 17:01:49] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-11] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-21 17:01:49] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-21 17:01:49] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-29] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-21 17:01:49] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-22] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-21 17:01:49] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-15] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-21 17:01:49] [INFO] [Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-8080"]
[2025-02-21 17:01:49] [INFO] [Http11NioProtocol] - Destroying ProtocolHandler ["http-nio-8080"]
[2025-02-21 17:01:52] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 13292 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-21 17:01:52] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-21 17:01:52] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-21 17:01:53] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-21 17:01:53] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-21 17:01:53] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-21 17:01:53] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-21 17:01:53] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-21 17:01:53] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 908 ms
[2025-02-21 17:01:54] [INFO] [Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8080"]
[2025-02-21 17:01:54] [INFO] [TomcatWebServer] - Tomcat started on port(s): 8080 (http) with context path ''
[2025-02-21 17:01:54] [INFO] [SaratangApplication] - Started SaratangApplication in 2.743 seconds (JVM running for 3.746)
[2025-02-21 17:01:58] [INFO] [[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2025-02-21 17:01:58] [INFO] [DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
[2025-02-21 17:01:58] [INFO] [DispatcherServlet] - Completed initialization in 1 ms
[2025-02-21 17:01:58] [INFO] [HikariDataSource] - HikariPool-1 - Starting...
[2025-02-21 17:01:58] [INFO] [HikariDataSource] - HikariPool-1 - Start completed.
[2025-02-21 17:01:58] [DEBUG] [getHistory] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p WHERE p.POST_TYPE = ? AND p.ID IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? AND j.judgement = ? ) ORDER BY p.REGDATE ? LIMIT ? OFFSET ?
[2025-02-21 17:01:59] [DEBUG] [getHistory] - ==> Parameters: fashion(String), 1(Integer), positive(String), asc(String), 5(Integer), 0(Long)
[2025-02-21 17:01:59] [ERROR] [[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''asc'
	    LIMIT 5 OFFSET 0' at line 10
### The error may exist in file [C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes\mapper\BoardMapper.xml]
### The error may involve com.swyp.saratang.mapper.BoardMapper.getHistory-Inline
### The error occurred while setting parameters
### SQL: SELECT           p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE,          p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE      FROM posts p      WHERE p.POST_TYPE = ?        AND p.ID IN (            SELECT j.post_id FROM judgements j             WHERE j.user_id = ? AND j.judgement = ?        )      ORDER BY p.REGDATE ?      LIMIT ? OFFSET ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''asc'
	    LIMIT 5 OFFSET 0' at line 10
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''asc'
	    LIMIT 5 OFFSET 0' at line 10] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''asc'
	    LIMIT 5 OFFSET 0' at line 10
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58) ~[mybatis-3.5.13.jar:3.5.13]
	at com.sun.proxy.$Proxy115.execute(Unknown Source) ~[?:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:333) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142) ~[mybatis-3.5.13.jar:3.5.13]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-2.1.1.jar:2.1.1]
	at com.sun.proxy.$Proxy89.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-2.1.1.jar:2.1.1]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86) ~[mybatis-3.5.13.jar:3.5.13]
	at com.sun.proxy.$Proxy92.getHistory(Unknown Source) ~[?:?]
	at com.swyp.saratang.service.BoardService.getHistory(BoardService.java:145) ~[classes/:?]
	at com.swyp.saratang.controller.BoardController.getHistory(BoardController.java:84) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:67) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:750) ~[?:1.8.0_431]
[2025-02-21 17:03:34] [INFO] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
[2025-02-21 17:03:34] [INFO] [Http11NioProtocol] - Pausing ProtocolHandler ["http-nio-8080"]
[2025-02-21 17:03:34] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-21 17:03:34] [INFO] [[/]] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[2025-02-21 17:03:34] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
[2025-02-21 17:03:34] [INFO] [Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-8080"]
[2025-02-21 17:03:34] [INFO] [Http11NioProtocol] - Destroying ProtocolHandler ["http-nio-8080"]
[2025-02-21 17:03:34] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown initiated...
[2025-02-21 17:03:34] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown completed.
[2025-02-21 17:03:38] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 9468 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-21 17:03:38] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-21 17:03:38] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-21 17:03:39] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-21 17:03:39] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-21 17:03:39] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-21 17:03:39] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-21 17:03:39] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-21 17:03:39] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 935 ms
[2025-02-21 17:03:41] [INFO] [Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8080"]
[2025-02-21 17:03:41] [INFO] [TomcatWebServer] - Tomcat started on port(s): 8080 (http) with context path ''
[2025-02-21 17:03:41] [INFO] [SaratangApplication] - Started SaratangApplication in 2.807 seconds (JVM running for 3.836)
[2025-02-21 17:03:42] [INFO] [[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2025-02-21 17:03:42] [INFO] [DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
[2025-02-21 17:03:42] [INFO] [DispatcherServlet] - Completed initialization in 1 ms
[2025-02-21 17:03:43] [INFO] [AbstractOpenApiResource] - Init duration for springdoc-openapi is: 282 ms
[2025-02-21 17:03:57] [INFO] [HikariDataSource] - HikariPool-1 - Starting...
[2025-02-21 17:03:58] [INFO] [HikariDataSource] - HikariPool-1 - Start completed.
[2025-02-21 17:03:58] [DEBUG] [getHistory] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p WHERE p.POST_TYPE = ? AND p.ID IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? AND j.judgement = ? ) ORDER BY p.REGDATE ? LIMIT ? OFFSET ?
[2025-02-21 17:03:58] [DEBUG] [getHistory] - ==> Parameters: fashion(String), 1(Integer), positive(String), asc(String), 5(Integer), 0(Long)
[2025-02-21 17:03:58] [ERROR] [[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''asc'
	    LIMIT 5 OFFSET 0' at line 10
### The error may exist in file [C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes\mapper\BoardMapper.xml]
### The error may involve com.swyp.saratang.mapper.BoardMapper.getHistory-Inline
### The error occurred while setting parameters
### SQL: SELECT           p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE,          p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE      FROM posts p      WHERE p.POST_TYPE = ?        AND p.ID IN (            SELECT j.post_id FROM judgements j             WHERE j.user_id = ? AND j.judgement = ?        )      ORDER BY p.REGDATE ?      LIMIT ? OFFSET ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''asc'
	    LIMIT 5 OFFSET 0' at line 10
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''asc'
	    LIMIT 5 OFFSET 0' at line 10] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''asc'
	    LIMIT 5 OFFSET 0' at line 10
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58) ~[mybatis-3.5.13.jar:3.5.13]
	at com.sun.proxy.$Proxy127.execute(Unknown Source) ~[?:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:333) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142) ~[mybatis-3.5.13.jar:3.5.13]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-2.1.1.jar:2.1.1]
	at com.sun.proxy.$Proxy89.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-2.1.1.jar:2.1.1]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142) ~[mybatis-3.5.13.jar:3.5.13]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86) ~[mybatis-3.5.13.jar:3.5.13]
	at com.sun.proxy.$Proxy92.getHistory(Unknown Source) ~[?:?]
	at com.swyp.saratang.service.BoardService.getHistory(BoardService.java:145) ~[classes/:?]
	at com.swyp.saratang.controller.BoardController.getHistory(BoardController.java:84) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_431]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_431]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_431]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_431]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:67) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:750) ~[?:1.8.0_431]
[2025-02-21 17:06:35] [INFO] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
[2025-02-21 17:06:37] [INFO] [Http11NioProtocol] - Pausing ProtocolHandler ["http-nio-8080"]
[2025-02-21 17:06:37] [INFO] [StandardService] - Stopping service [Tomcat]
[2025-02-21 17:06:37] [INFO] [[/]] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[2025-02-21 17:06:37] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-25] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-21 17:06:37] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [ForkJoinPool.commonPool-worker-11] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1835)
 java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1704)
 java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
[2025-02-21 17:06:37] [WARN] [WebappClassLoaderBase] - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
[2025-02-21 17:06:37] [INFO] [Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-8080"]
[2025-02-21 17:06:37] [INFO] [Http11NioProtocol] - Destroying ProtocolHandler ["http-nio-8080"]
[2025-02-21 17:06:37] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown initiated...
[2025-02-21 17:06:37] [INFO] [HikariDataSource] - HikariPool-1 - Shutdown completed.
[2025-02-21 17:07:03] [INFO] [SaratangApplication] - Starting SaratangApplication using Java 1.8.0_431 on GramPro17JH with PID 7308 (C:\Users\user\Desktop\sara0214\saratang\saratang\target\classes started by user in C:\Users\user\Desktop\sara0214\saratang\saratang)
[2025-02-21 17:07:03] [DEBUG] [SaratangApplication] - Running with Spring Boot v2.7.10, Spring v5.3.26
[2025-02-21 17:07:03] [INFO] [SaratangApplication] - No active profile set, falling back to 1 default profile: "default"
[2025-02-21 17:07:04] [INFO] [TomcatWebServer] - Tomcat initialized with port(s): 8080 (http)
[2025-02-21 17:07:04] [INFO] [Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8080"]
[2025-02-21 17:07:04] [INFO] [StandardService] - Starting service [Tomcat]
[2025-02-21 17:07:04] [INFO] [StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.73]
[2025-02-21 17:07:04] [INFO] [[/]] - Initializing Spring embedded WebApplicationContext
[2025-02-21 17:07:04] [INFO] [ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 1193 ms
[2025-02-21 17:07:06] [INFO] [Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8080"]
[2025-02-21 17:07:06] [INFO] [TomcatWebServer] - Tomcat started on port(s): 8080 (http) with context path ''
[2025-02-21 17:07:06] [INFO] [SaratangApplication] - Started SaratangApplication in 3.686 seconds (JVM running for 4.799)
[2025-02-21 17:08:00] [INFO] [[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2025-02-21 17:08:00] [INFO] [DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
[2025-02-21 17:08:00] [INFO] [DispatcherServlet] - Completed initialization in 1 ms
[2025-02-21 17:08:01] [INFO] [HikariDataSource] - HikariPool-1 - Starting...
[2025-02-21 17:08:01] [INFO] [HikariDataSource] - HikariPool-1 - Start completed.
[2025-02-21 17:08:01] [DEBUG] [getHistory] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p WHERE p.POST_TYPE = ? AND p.ID IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? AND j.judgement = ? ) ORDER BY p.REGDATE asc LIMIT ? OFFSET ?
[2025-02-21 17:08:01] [DEBUG] [getHistory] - ==> Parameters: fashion(String), 1(Integer), positive(String), 5(Integer), 0(Long)
[2025-02-21 17:08:01] [DEBUG] [getHistory] - <==      Total: 4
[2025-02-21 17:08:01] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 17:08:01] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-21 17:08:01] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 17:08:01] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 17:08:01] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 17:08:01] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 17:08:01] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 17:08:01] [DEBUG] [getImagesByPostId] - ==> Parameters: 19(Integer)
[2025-02-21 17:08:01] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 17:08:01] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 17:08:01] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 17:08:01] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 17:08:01] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-21 17:08:01] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-21 17:08:01] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-21 17:08:20] [DEBUG] [getHistory] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p WHERE p.POST_TYPE = ? AND p.ID IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? AND j.judgement = ? ) ORDER BY p.REGDATE DESC LIMIT ? OFFSET ?
[2025-02-21 17:08:20] [DEBUG] [getHistory] - ==> Parameters: fashion(String), 1(Integer), positive(String), 5(Integer), 0(Long)
[2025-02-21 17:08:20] [DEBUG] [getHistory] - <==      Total: 4
[2025-02-21 17:08:20] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 17:08:20] [DEBUG] [getImagesByPostId] - ==> Parameters: 22(Integer)
[2025-02-21 17:08:20] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 17:08:20] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 17:08:20] [DEBUG] [getImagesByPostId] - ==> Parameters: 18(Integer)
[2025-02-21 17:08:20] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 17:08:20] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 17:08:20] [DEBUG] [getImagesByPostId] - ==> Parameters: 19(Integer)
[2025-02-21 17:08:20] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 17:08:20] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 17:08:20] [DEBUG] [getImagesByPostId] - ==> Parameters: 17(Integer)
[2025-02-21 17:08:20] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 17:08:20] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-21 17:08:20] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-21 17:08:20] [DEBUG] [getBoardListCount] - <==      Total: 1
[2025-02-21 17:08:32] [DEBUG] [getHistory] - ==>  Preparing: SELECT p.ID, p.USER_ID,p.CATEGORY_ID,p.CONCERN_KEYWORD_ID,p.POST_TYPE,p.BRAND,p.ORIGINAL_PRICE, p.DISCOUNT_PRICE,p.PRODUCT_LINK,p.TITLE,p.CURRENT_PRICE,p.MEMO,p.IS_SPEC_PUBLIC,p.DETAIL_MEMO,p.REGDATE FROM posts p WHERE p.POST_TYPE = ? AND p.ID IN ( SELECT j.post_id FROM judgements j WHERE j.user_id = ? AND j.judgement = ? ) ORDER BY p.REGDATE DESC LIMIT ? OFFSET ?
[2025-02-21 17:08:32] [DEBUG] [getHistory] - ==> Parameters: fashion(String), 1(Integer), negative(String), 5(Integer), 0(Long)
[2025-02-21 17:08:32] [DEBUG] [getHistory] - <==      Total: 2
[2025-02-21 17:08:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 17:08:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 21(Integer)
[2025-02-21 17:08:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 17:08:32] [DEBUG] [getImagesByPostId] - ==>  Preparing: SELECT image_url FROM post_images WHERE post_id = ?
[2025-02-21 17:08:32] [DEBUG] [getImagesByPostId] - ==> Parameters: 20(Integer)
[2025-02-21 17:08:32] [DEBUG] [getImagesByPostId] - <==      Total: 1
[2025-02-21 17:08:32] [DEBUG] [getBoardListCount] - ==>  Preparing: SELECT COUNT(*) AS CNT FROM posts
[2025-02-21 17:08:32] [DEBUG] [getBoardListCount] - ==> Parameters: 
[2025-02-21 17:08:32] [DEBUG] [getBoardListCount] - <==      Total: 1
